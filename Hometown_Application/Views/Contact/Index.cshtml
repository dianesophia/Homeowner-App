@model IEnumerable<Hometown_Application.Models.ContactModel>
@using Hometown_Application.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Contact";
}
    <style>
        :root {
            --primary-color: #6F754E;
            --primary-light: #8a916a;
            --primary-dark: #5a6040;
            --secondary-color: #A08D67;
            --secondary-light: #b8a787;
            --background-color: #E6DDC4;
            --text-color: #2F3A31;
            --card-bg: #FFFFFF;
            --danger-color: #dc3545;
            --success-color: #198754;
            --warning-color: #ffc107;
            --info-color: #0dcaf0;
            --border-radius: 16px;
            --shadow: 0px 6px 12px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

    .navbar {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        background-color: var(--primary-color);
        box-shadow: var(--shadow);
        z-index: 1000;
        min-height: 100px;
        padding: 15px 20px;
        font-family: 'Marcellus', serif;
    }

    .navbar-brand {
        font-size: 1.2rem;
        font-weight: normal;
        color: white;
    }

        .navbar-brand:hover {
            transform: scale(1.05);
        }

    .navbar-nav .nav-link {
        color: white;
        font-weight: 500;
        margin: 0 10px;
        padding: 8px 16px;
        border-radius: var(--border-radius);
        transition: var(--transition);
    }

        .navbar-nav .nav-link:hover {
            background: var(--primary-light);
            color: white;
            transform: translateY(-2px);
        }

    .user-info {
        background: var(--primary-light);
        padding: 8px 16px;
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        gap: 8px;
        backdrop-filter: blur(5px);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

        .user-info i {
            font-size: 1.2rem;
        }
        /* New page title style from ManageUsers */
        .page-title {
            font-size: 2.2rem;
            color: var(--text-color);
            margin-bottom: 1.5rem;
            font-weight: 600;
            position: relative;
            padding-bottom: 8px;
        }

            .page-title::after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 0;
                width: 80px;
                height: 3px;
                background-color: var(--primary-color);
                border-radius: 3px;
            }

        /* Page header style from ManageUsers */
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        flex-wrap: wrap;
        gap: 20px;
        margin-top: auto;
    }
        /* Stats cards from ManageUsers */
        .stat-cards-container {
            display: flex;
            flex-wrap: nowrap;
            justify-content: space-between;
            margin-bottom: 2rem;
            overflow-x: auto;
        }

        .stat-card {
            background-color: var(--card-bg);
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            padding: 15px 20px;
            transition: var(--transition);
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: flex-start;
            gap: 10px;
            flex-grow: 1;
            flex: 1;
            max-width: 22%;
            min-width: 200px;
            position: relative;
        }

            .stat-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 4px;
            }

            .stat-card.emergency::before {
                background-color: var(--danger-color);
            }

            .stat-card.utility::before {
                background-color: var(--info-color);
            }

            .stat-card.admin::before {
                background-color: black;
            }

            .stat-card.other::before {
                background-color: var(--primary-light);
            }

            .stat-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0,0,0,0.1);
            }

        .stat-icon {
            font-size: 1.5rem;
            background-color: rgba(0,0,0,0.05);
            width: 50px;
            height: 50px;
            min-width: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
        }

        .emergency-icon {
            color: var(--danger-color);
        }

        .utility-icon {
            color: var(--info-color);
        }

        .school-icon {
            color: var(--secondary-color);
        }

        .other-icon {
            color: var(--primary-light);
        }

        .stat-text {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
        }

        .stat-number {
            font-size: 1.5rem;
            font-weight: 700;
            line-height: 1;
            color: var(--text-color);
            margin: 0;
        }

        .stat-label {
            font-size: 0.8rem;
            color: #666;
            margin: 0;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        /* Search container from ManageUsers */
        .search-container {
            display: flex;
            margin-bottom: 1.5rem;
            box-shadow: var(--shadow);
            border-radius: var(--border-radius);
            overflow: hidden;
        }

        .search-input {
            flex: 1;
            padding: 15px 20px;
            border: 1px solid #eee;
            border-right: none;
            border-radius: var(--border-radius) 0 0 var(--border-radius);
            font-size: 1rem;
            background-color: white;
            transition: var(--transition);
        }

            .search-input:focus {
                outline: none;
                box-shadow: inset 0 0 0 2px var(--primary-light);
            }

        .search-button {
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: 0 var(--border-radius) var(--border-radius) 0;
            padding: 0 25px;
            cursor: pointer;
            transition: var(--transition);
        }

            .search-button:hover {
                background-color: var(--primary-dark);
            }

        /* Button styling from ManageUsers */
        .action-button {
            background-color: var(--secondary-color);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            padding: 12px 24px;
            font-weight: 500;
            transition: var(--transition);
            display: inline-flex;
            align-items: center;
            gap: 10px;
            text-decoration: none;
            box-shadow: 0 3px 6px rgba(0,0,0,0.1);
        }

            .action-button:hover {
                background-color: var(--secondary-light);
                transform: translateY(-2px);
                color: white;
                box-shadow: 0 5px 12px rgba(0,0,0,0.15);
            }

            .action-button i {
                font-size: 1.1rem;
            }

        /* Tab container from ManageUsers */
        .tab-container {
            background-color: var(--card-bg);
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            overflow: hidden;
            padding: 0;
            border: 1px solid rgba(0,0,0,0.05);
            margin-bottom: 10rem;
        }

        .nav-tabs {
            display: flex;
            gap: 0;
            padding: 15px 15px 0;
            background-color: var(--primary-color);
            border-bottom: none;
            border-radius: var(--border-radius) var(--border-radius) 0 0;
        }

            .nav-tabs .nav-item {
                margin-right: 4px;
                margin-bottom: 0;
            }

            .nav-tabs .nav-link {
                color: rgba(255,255,255,0.8);
                font-weight: 600;
                padding: 12px 25px;
                border-radius: var(--border-radius) var(--border-radius) 0 0;
                transition: var(--transition);
                background-color: rgba(255,255,255,0.1);
                border: none;
                cursor: pointer;
                position: relative;
            }

                .nav-tabs .nav-link:hover {
                    color: white;
                    background-color: rgba(255,255,255,0.2);
                }

                .nav-tabs .nav-link.active {
                    color: var(--text-color);
                    background-color: white;
                    box-shadow: 0 -2px 8px rgba(0,0,0,0.1);
                }

                .nav-tabs .nav-link i {
                    margin-right: 8px;
                    font-size: 1rem;
                }

        .tab-content {
            padding: 25px;
            background-color: var(--card-bg);
        }

        /* Cards container styling */
        .cards-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }

        .contact-card {
            background-color: var(--card-bg);
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            overflow: hidden;
            transition: var(--transition);
            position: relative;
        }

            .contact-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 12px 20px rgba(0, 0, 0, 0.15);
            }

        .card-header {
            background-color: var(--primary-color);
            color: white;
            padding: 15px 20px;
            font-weight: 500;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .contact-type-badge {
            background-color: rgba(255, 255, 255, 0.2);
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.85rem;
        }

        .card-body {
            padding: 20px;
        }

        .contact-info {
            margin-bottom: 15px;
        }

        .info-label {
            color: var(--secondary-color);
            font-size: 0.9rem;
            margin-bottom: 5px;
        }

        .info-value {
            font-size: 1.1rem;
            word-break: break-word;
        }

        .card-footer {
            padding: 15px 20px;
            background-color: rgba(0, 0, 0, 0.02);
            border-top: 1px solid rgba(0, 0, 0, 0.05);
            display: flex;
            justify-content: flex-end;
            gap: 10px;
        }

        /* Action buttons styling */
        .actions-group {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }

        .btn-action {
            padding: 8px 12px;
            border-radius: 6px;
            font-size: 0.85rem;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            transition: var(--transition);
            border: none;
            gap: 5px;
            text-decoration: none;
        }

        .btn-edit {
            background-color: #e9f0fd;
            color: #4287f5;
        }

            .btn-edit:hover {
                background-color: #d3e2fc;
                transform: translateY(-2px);
            }

        .btn-delete {
            background-color: #fde9e9;
            color: var(--danger-color);
        }

            .btn-delete:hover {
                background-color: #fcd3d3;
                transform: translateY(-2px);
            }

        .contact-icon {
            font-size: 2rem;
            color: var(--primary-light);
            text-align: center;
            margin-bottom: 10px;
        }

        .empty-state {
            text-align: center;
            padding: 40px 20px;
            background-color: rgba(255, 255, 255, 0.9);
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            grid-column: 1 / -1;
        }

            .empty-state i {
                color: var(--secondary-color);
                opacity: 0.7;
                font-size: 4rem;
                margin-bottom: 20px;
            }

            .empty-state p {
                color: var(--text-color);
                font-size: 1.2rem;
                margin: 0;
            }
    </style>
    <div class="content">
        <!-- Page Header -->
        <div class="page-header">
            <h1 class="page-title">Contact List</h1>
            @if (User.IsInRole("Admin"))
            {
                <a asp-action="CreateEditContact" class="action-button">
                    <i class="fas fa-plus-circle"></i>
                    <span>Add Contact</span>
                </a>
            }
        </div>

        <!-- Statistics Cards -->
    <div class="stat-cards-container">
        <div class="stat-card admin">
            <div class="stat-icon admin-icon">
                <i class="fas fa-user-shield"></i>
            </div>
            <div class="stat-text">
                <div class="stat-number">@(Model != null ? Model.Count(c => c.ContactType.ToLower().Contains("admin")) : 0)</div>
                <div class="stat-label">Admin</div>
            </div>
        </div>
        <div class="stat-card emergency">
            <div class="stat-icon emergency-icon">
                <i class="fas fa-ambulance"></i>
            </div>
            <div class="stat-text">
                <div class="stat-number">@(Model != null ? Model.Count(c => c.ContactType.ToLower().Contains("emergency")) : 0)</div>
                <div class="stat-label">Emergency</div>
            </div>
        </div>
        <div class="stat-card utility">
            <div class="stat-icon utility-icon">
                <i class="fas fa-bolt"></i>
            </div>
            <div class="stat-text">
                <div class="stat-number">@(Model != null ? Model.Count(c => c.ContactType.ToLower().Contains("utility") || c.ContactType.ToLower().Contains("electric") || c.ContactType.ToLower().Contains("water") || c.ContactType.ToLower().Contains("maintenance")) : 0)</div>
                <div class="stat-label">Maintenance</div>
            </div>
        </div>
        <div class="stat-card other">
            <div class="stat-icon other-icon">
                <i class="fas fa-phone-alt"></i>
            </div>
            <div class="stat-text">
                <div class="stat-number">@(Model != null ? Model.Count(c => !c.ContactType.ToLower().Contains("emergency") && !c.ContactType.ToLower().Contains("maintenance") && !c.ContactType.ToLower().Contains("utility") && !c.ContactType.ToLower().Contains("electric") && !c.ContactType.ToLower().Contains("water") && !c.ContactType.ToLower().Contains("school") && !c.ContactType.ToLower().Contains("admin")) : 0)</div>
                <div class="stat-label">Other</div>
            </div>
        </div>
    </div>


        <!-- Search bar -->
        <div class="search-container">
            <input type="text" class="search-input" id="contactSearch" placeholder="Search contacts...">
            <button class="search-button">
                <i class="fas fa-search"></i>
            </button>
        </div>

        <!-- Tab Container -->
        <div class="tab-container">
            <ul class="nav nav-tabs" id="contactTabs">
                <li class="nav-item">
                    <a class="nav-link active" id="all-tab" data-bs-toggle="tab" href="#all">
                        <i class="fas fa-th-list"></i> All Contacts
                    </a>
                </li>
            <li class="nav-item">
                <a class="nav-link" id="admin-tab" data-bs-toggle="tab" href="#admin">
                    <i class="fas fa-user-shield"></i> Admin
                </a>
            </li>
                <li class="nav-item">
                    <a class="nav-link" id="emergency-tab" data-bs-toggle="tab" href="#emergency">
                        <i class="fas fa-ambulance"></i> Emergency
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="utility-tab" data-bs-toggle="tab" href="#utility">
                        <i class="fas fa-bolt"></i> Maintenance
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="other-tab" data-bs-toggle="tab" href="#other">
                        <i class="fas fa-phone-alt"></i> Other
                    </a>
                </li>
            </ul>

            <div class="tab-content">
                <!-- All Contacts Tab -->
                <div class="tab-pane fade show active" id="all">
                    <div class="cards-container">
                        @if (Model != null && Model.Any())
                        {
                            @foreach (var contact in Model)
                            {
                                <div class="contact-card">
                                    <div class="card-header">
                                        <span>Contact Details</span>
                                        <span class="contact-type-badge">@contact.ContactType</span>
                                    </div>
                                    <div class="card-body">
                                        <div class="contact-icon">
                                            @if (contact.ContactType.ToLower().Contains("emergency"))
                                            {
                                                <i class="fas fa-ambulance"></i>
                                            }
                                            else if (contact.ContactType.ToLower().Contains("police") || contact.ContactType.ToLower().Contains("security"))
                                            {
                                                <i class="fas fa-shield-alt"></i>
                                            }
                                            else if (contact.ContactType.ToLower().Contains("fire"))
                                            {
                                                <i class="fas fa-fire-extinguisher"></i>
                                            }
                                            else if (contact.ContactType.ToLower().Contains("hospital") || contact.ContactType.ToLower().Contains("medical"))
                                            {
                                                <i class="fas fa-hospital"></i>
                                            }
                                        else if (contact.ContactType.ToLower().Contains("utility") || contact.ContactType.ToLower().Contains("electric") || contact.ContactType.ToLower().Contains("maintenance") || contact.ContactType.ToLower().Contains("water"))
                                            {
                                                <i class="fas fa-bolt"></i>
                                            }
                                            else if (contact.ContactType.ToLower().Contains("school"))
                                            {
                                                <i class="fas fa-school"></i>
                                            }
                                            else if (contact.ContactType.ToLower().Contains("government") || contact.ContactType.ToLower().Contains("city"))
                                            {
                                                <i class="fas fa-landmark"></i>
                                            }
                                            else
                                            {
                                                <i class="fas fa-phone-alt"></i>
                                            }
                                        </div>
                                        <div class="contact-info">
                                            <div class="info-label">Description</div>
                                            <div class="info-value">@contact.Description</div>
                                        </div>
                                        <div class="contact-info">
                                            <div class="info-label">Number</div>
                                            <div class="info-value">@contact.Number</div>
                                        </div>
                                    </div>
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <div class="card-footer">
                                            <div class="actions-group">
                                                <a asp-action="CreateEditContact" asp-route-id="@contact.Id" class="btn-action btn-edit">
                                                    <i class="fas fa-edit"></i>
                                                    <span>Edit</span>
                                                </a>
                                                <form asp-action="DeleteContact" asp-route-id="@contact.Id" method="post" style="display:inline;">
                                                    <button type="submit" class="btn-action btn-delete" onclick="return confirm('Are you sure you want to delete this contact?')">
                                                        <i class="fas fa-trash-alt"></i>
                                                        <span>Delete</span>
                                                    </button>
                                                </form>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        }
                        else
                        {
                            <div class="empty-state">
                                <i class="fas fa-address-book"></i>
                                <p>No contacts found. Add your first contact to get started!</p>
                            </div>
                        }
                    </div>
                </div>
            <!-- Admin Tab -->
            <div class="tab-pane fade" id="admin">
                <div class="cards-container">
                    @if (Model != null && Model.Any(c => c.ContactType.ToLower().Contains("admin")))
                    {
                        @foreach (var contact in Model.Where(c => c.ContactType.ToLower().Contains("admin")))
                        {
                            <div class="contact-card">
                                <div class="card-header">
                                    <span>Contact Details</span>
                                    <span class="contact-type-badge">@contact.ContactType</span>
                                </div>
                                <div class="card-body">
                                    <div class="contact-icon">
                                        <i class="fas fa-user-shield"></i>
                                    </div>
                                    <div class="contact-info">
                                        <div class="info-label">Description</div>
                                        <div class="info-value">@contact.Description</div>
                                    </div>
                                    <div class="contact-info">
                                        <div class="info-label">Number</div>
                                        <div class="info-value">@contact.Number</div>
                                    </div>
                                </div>
                                @if (User.IsInRole("Admin"))
                                {
                                    <div class="card-footer">
                                        <div class="actions-group">
                                            <a asp-action="CreateEditContact" asp-route-id="@contact.Id" class="btn-action btn-edit">
                                                <i class="fas fa-edit"></i>
                                                <span>Edit</span>
                                            </a>
                                            <form asp-action="DeleteContact" asp-route-id="@contact.Id" method="post" style="display:inline;">
                                                <button type="submit" class="btn-action btn-delete" onclick="return confirm('Are you sure you want to delete this contact?')">
                                                    <i class="fas fa-trash-alt"></i>
                                                    <span>Delete</span>
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    }
                    else
                    {
                        <div class="empty-state">
                            <i class="fas fa-user-shield"></i>
                            <p>No admin contacts found.</p>
                        </div>
                    }
                </div>
            </div>

                <!-- Emergency Tab -->
                <div class="tab-pane fade" id="emergency">
                    <div class="cards-container">
                        @if (Model != null && Model.Any(c => c.ContactType.ToLower().Contains("emergency")))
                        {
                            @foreach (var contact in Model.Where(c => c.ContactType.ToLower().Contains("emergency")))
                            {
                                <div class="contact-card">
                                    <div class="card-header">
                                        <span>Contact Details</span>
                                        <span class="contact-type-badge">@contact.ContactType</span>
                                    </div>
                                    <div class="card-body">
                                        <div class="contact-icon">
                                            <i class="fas fa-ambulance"></i>
                                        </div>
                                        <div class="contact-info">
                                            <div class="info-label">Description</div>
                                            <div class="info-value">@contact.Description</div>
                                        </div>
                                        <div class="contact-info">
                                            <div class="info-label">Number</div>
                                            <div class="info-value">@contact.Number</div>
                                        </div>
                                    </div>
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <div class="card-footer">
                                            <div class="actions-group">
                                                <a asp-action="CreateEditContact" asp-route-id="@contact.Id" class="btn-action btn-edit">
                                                    <i class="fas fa-edit"></i>
                                                    <span>Edit</span>
                                                </a>
                                                <form asp-action="DeleteContact" asp-route-id="@contact.Id" method="post" style="display:inline;">
                                                    <button type="submit" class="btn-action btn-delete" onclick="return confirm('Are you sure you want to delete this contact?')">
                                                        <i class="fas fa-trash-alt"></i>
                                                        <span>Delete</span>
                                                    </button>
                                                </form>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        }
                        else
                        {
                            <div class="empty-state">
                                <i class="fas fa-ambulance"></i>
                                <p>No emergency contacts found.</p>
                            </div>
                        }
                    </div>
                </div>

                <!-- Utility Tab -->
                <div class="tab-pane fade" id="utility">
                    <div class="cards-container">
                        @if (Model != null && Model.Any(c => c.ContactType.ToLower().Contains("utility") || c.ContactType.ToLower().Contains("electric") || c.ContactType.ToLower().Contains("water")))
                        {
                            @foreach (var contact in Model.Where(c => c.ContactType.ToLower().Contains("utility") || c.ContactType.ToLower().Contains("electric") || c.ContactType.ToLower().Contains("water")))
                            {
                                <div class="contact-card">
                                    <div class="card-header">
                                        <span>Contact Details</span>
                                        <span class="contact-type-badge">@contact.ContactType</span>
                                    </div>
                                    <div class="card-body">
                                        <div class="contact-icon">
                                            <i class="fas fa-bolt"></i>
                                        </div>
                                        <div class="contact-info">
                                            <div class="info-label">Description</div>
                                            <div class="info-value">@contact.Description</div>
                                        </div>
                                        <div class="contact-info">
                                            <div class="info-label">Number</div>
                                            <div class="info-value">@contact.Number</div>
                                        </div>
                                    </div>
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <div class="card-footer">
                                            <div class="actions-group">
                                                <a asp-action="CreateEditContact" asp-route-id="@contact.Id" class="btn-action btn-edit">
                                                    <i class="fas fa-edit"></i>
                                                    <span>Edit</span>
                                                </a>
                                                <form asp-action="DeleteContact" asp-route-id="@contact.Id" method="post" style="display:inline;">
                                                    <button type="submit" class="btn-action btn-delete" onclick="return confirm('Are you sure you want to delete this contact?')">
                                                        <i class="fas fa-trash-alt"></i>
                                                        <span>Delete</span>
                                                    </button>
                                                </form>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        }
                        else
                        {
                            <div class="empty-state">
                                <i class="fas fa-bolt"></i>
                                <p>No utility contacts found.</p>
                            </div>
                        }
                    </div>
                </div>

                <!-- Other Tab -->
                <div class="tab-pane fade" id="other">
                    <div class="cards-container">
                    @if (Model != null && Model.Any(c => !c.ContactType.ToLower().Contains("emergency") && !c.ContactType.ToLower().Contains("utility") && !c.ContactType.ToLower().Contains("maintenance") && !c.ContactType.ToLower().Contains("electric") && !c.ContactType.ToLower().Contains("water") && !c.ContactType.ToLower().Contains("school")))
                        {
                        @foreach (var contact in Model.Where(c => !c.ContactType.ToLower().Contains("emergency") && !c.ContactType.ToLower().Contains("utility") && !c.ContactType.ToLower().Contains("electric") && !c.ContactType.ToLower().Contains("water") && !c.ContactType.ToLower().Contains("maintenance") && !c.ContactType.ToLower().Contains("school")))
                            {
                                <div class="contact-card">
                                    <div class="card-header">
                                        <span>Contact Details</span>
                                        <span class="contact-type-badge">@contact.ContactType</span>
                                    </div>
                                    <div class="card-body">
                                        <div class="contact-icon">
                                            <i class="fas fa-phone-alt"></i>
                                        </div>
                                        <div class="contact-info">
                                            <div class="info-label">Description</div>
                                            <div class="info-value">@contact.Description</div>
                                        </div>
                                        <div class="contact-info">
                                            <div class="info-label">Number</div>
                                            <div class="info-value">@contact.Number</div>
                                        </div>
                                    </div>
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <div class="card-footer">
                                            <div class="actions-group">
                                                <a asp-action="CreateEditContact" asp-route-id="@contact.Id" class="btn-action btn-edit">
                                                    <i class="fas fa-edit"></i>
                                                    <span>Edit</span>
                                                </a>
                                                <form asp-action="DeleteContact" asp-route-id="@contact.Id" method="post" style="display:inline;">
                                                    <button type="submit" class="btn-action btn-delete" onclick="return confirm('Are you sure you want to delete this contact?')">
                                                        <i class="fas fa-trash-alt"></i>
                                                        <span>Delete</span>
                                                    </button>
                                                </form>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        }
                        else
                        {
                            <div class="empty-state">
                                <i class="fas fa-phone-alt"></i>
                                <p>No other contacts found.</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        <script>
            // Search functionality
            document.addEventListener('DOMContentLoaded', function () {
                const searchInput = document.getElementById('contactSearch');
                searchInput.addEventListener('keyup', function () {
                    const searchTerm = this.value.toLowerCase();
                    const allCards = document.querySelectorAll('.contact-card');

                    allCards.forEach(card => {
                        const description = card.querySelector('.info-value').innerText.toLowerCase();
                        const contactType = card.querySelector('.contact-type-badge').innerText.toLowerCase();
                        const number = card.querySelectorAll('.info-value')[1].innerText.toLowerCase();

                        if (description.includes(searchTerm) || contactType.includes(searchTerm) || number.includes(searchTerm)) {
                            card.style.display = 'block';
                        } else {
                            card.style.display = 'none';
                        }
                    });
                });
            });

       src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js">
        </script>
    }
