@model Hometown_Application.Models.ReservationListViewModel

@{
    ViewData["Title"] = "Manage Reservations";
    var statuses = new List<string> { "Pending", "Approved", "Declined" };
    var activeTab = TempData["ActiveTab"] as string ?? "Pending"; // Default to "Pending" if not set
}

<h2>Manage Reservations</h2>

<!-- Display success message if present -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

<!-- Search and Filter Form -->
<form method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="search" placeholder="Search by Facility" value="@Model.SearchQuery" class="form-control" />
        <select name="statusFilter" class="form-select">
            <option value="">All Statuses</option>
            @foreach (var status in statuses)
            {
                <option value="@status" selected="@(Model.StatusFilter == status ? "selected" : null)">@status</option>
            }
        </select>
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

<!-- Bootstrap 5 Tabs -->
<ul class="nav nav-tabs" id="reservationStatusTabs" role="tablist">
    @foreach (var status in statuses)
    {
        <li class="nav-item" role="presentation">
            <button class="nav-link @(status == activeTab ? "active" : "")"
                    id="tab-@status.Replace(" ", "")"
                    data-bs-toggle="tab"
                    data-bs-target="#reservation-@status.Replace(" ", "")"
                    type="button"
                    role="tab"
                    aria-controls="reservation-@status.Replace(" ", "")"
                    aria-selected="@(status == activeTab ? "true" : "false")">
                @status
            </button>
        </li>
    }
</ul>

<!-- Tab Content -->
<div class="tab-content mt-3" id="reservationTabContent">
    @foreach (var status in statuses)
    {
        var reservationsByStatus = Model.Reservations
        .Where(item => item.Status == status && !item.IsDeleted)
        .ToList();

        <div class="tab-pane fade @(status == activeTab ? "show active" : "")"
             id="reservation-@status.Replace(" ", "")"
             role="tabpanel"
             aria-labelledby="tab-@status.Replace(" ", "")">

            @if (reservationsByStatus.Any())
            {
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Facility Image</th>
                            <th>Facility</th>
                            <th>User</th> <!-- Changed from UserId to User (FirstName + LastName) -->
                            <th>Reservation Date</th>
                            <th>Start Time</th>
                            <th>End Time</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in reservationsByStatus)
                        {
                            <tr>
                                <td>
                                    @if (item.Facility?.Image != null && item.Facility.Image.Length > 0)
                                    {
                                        var base64Image = Convert.ToBase64String(item.Facility.Image);
                                        var imgSrc = $"data:image/jpeg;base64,{base64Image}";
                                        <img src="@imgSrc" alt="@item.Facility.Name" style="max-width: 100px; max-height: 100px;" />
                                    }
                                    else
                                    {
                                        <span>No Image</span>
                                    }
                                </td>
                                <td>@(item.Facility?.Name ?? "Unknown Facility")</td>
                                <td>@(item.ApplicationUser?.FirstName + " " + item.ApplicationUser?.LastName ?? "Unknown User")</td> <!-- Display FirstName + LastName -->
                                <td>@item.ReservationDate.ToString("yyyy-MM-dd")</td>
                                <td>@item.StartTime.ToString("hh:mm tt")</td>
                                <td>@item.EndTime.ToString("hh:mm tt")</td>
                                <td>@item.Status</td>
                                <td>
                                    @if (item.Status == "Pending")
                                    {
                                        <form asp-action="UpdateReservationStatus" asp-route-id="@item.ReservationId" method="post" style="display:inline;">
                                            <input type="hidden" name="newStatus" value="Approved" />
                                            <button type="submit" class="btn btn-success btn-sm">Approve</button>
                                        </form>
                                        <form asp-action="UpdateReservationStatus" asp-route-id="@item.ReservationId" method="post" style="display:inline;">
                                            <input type="hidden" name="newStatus" value="Declined" />
                                            <button type="submit" class="btn btn-danger btn-sm">Decline</button>
                                        </form>
                                    }
                                    <form asp-action="Delete" asp-route-id="@item.ReservationId" method="post" style="display:inline;">
                                        <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure?')">Delete</button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <!-- Pagination -->
                <div class="pagination">
                    @if (Model.PageNumber > 1)
                    {
                        <a href="@Url.Action("ManageReservations", new { search = Model.SearchQuery, statusFilter = status, pageNumber = Model.PageNumber - 1 })" class="btn btn-secondary">Previous</a>
                    }
                    <span>Page @Model.PageNumber of @Model.TotalPages</span>
                    @if (Model.PageNumber < Model.TotalPages)
                    {
                        <a href="@Url.Action("ManageReservations", new { search = Model.SearchQuery, statusFilter = status, pageNumber = Model.PageNumber + 1 })" class="btn btn-secondary">Next</a>
                    }
                </div>
            }
            else
            {
                <p class="text-muted">No reservations available for @status.</p>
            }
        </div>
    }
</div>

<!-- Bootstrap 5 JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var triggerTabList = [].slice.call(document.querySelectorAll('#reservationStatusTabs button'))
        triggerTabList.forEach(function (triggerEl) {
            var tabTrigger = new bootstrap.Tab(triggerEl)
            triggerEl.addEventListener('click', function (event) {
                event.preventDefault()
                tabTrigger.show()
            })
        })

        // Optionally, programmatically set the active tab based on TempData["ActiveTab"]
        var activeTab = '@activeTab';
        if (activeTab) {
            var tabTrigger = new bootstrap.Tab(document.querySelector(`#tab-${activeTab.replace(" ", "")}`));
            tabTrigger.show();
        }
    });
</script>