@model Hometown_Application.ViewModel.PollViewModel

@{
    ViewData["Title"] = "Edit Poll";
}

<div class="container">
    <div class="row mb-4">
        <div class="col-md-12">
            <h1 class="display-4">@ViewData["Title"]</h1>
            <p class="lead">Edit poll details and manage questions</p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Poll Details</h5>
                </div>
                <div class="card-body">
                    <form asp-action="Edit">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="PollId" />
                        <input type="hidden" asp-for="CreatorId" />

                        <div class="form-group mb-3">
                            <label asp-for="Title" class="control-label"></label>
                            <input asp-for="Title" class="form-control" aria-describedby="titleHelp" />
                            <span asp-validation-for="Title" class="text-danger"></span>
                            <small id="titleHelp" class="form-text text-muted">Enter a concise title for your poll.</small>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Description" class="control-label"></label>
                            <textarea asp-for="Description" class="form-control" rows="3" aria-describedby="descriptionHelp"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                            <small id="descriptionHelp" class="form-text text-muted">Provide a brief description of the poll (optional).</small>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="ExpiryDate" class="control-label"></label>
                                    <input asp-for="ExpiryDate" class="form-control" type="date" aria-describedby="expiryHelp" />
                                    <span asp-validation-for="ExpiryDate" class="text-danger"></span>
                                    <small id="expiryHelp" class="form-text text-muted">Leave blank for no expiry date.</small>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="IsActive" class="control-label"></label>
                                    <div class="form-check mt-2">
                                        <input asp-for="IsActive" class="form-check-input" id="IsActive" />
                                        <label class="form-check-label" for="IsActive">
                                            Make this poll active and available to users
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group mt-3">
                            <button type="submit" class="btn btn-primary" aria-label="Save changes to poll">
                                <i class="fas fa-save"></i> Save Changes
                            </button>
                            <a asp-action="Index" class="btn btn-secondary" aria-label="Return to polls list">
                                <i class="fas fa-arrow-left"></i> Back to List
                            </a>
                        </div>
                    </form>
                </div>
            </div>

            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Questions</h5>
                </div>
                <div class="card-body">
                    <div class="mb-4">
                        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addQuestionModal" aria-label="Add a new question">
                            <i class="fas fa-plus-circle"></i> Add New Question
                        </button>
                    </div>

                    <div id="questionsContainer">
                        @if (Model.Questions.Any())
                        {
                            @foreach (var question in Model.Questions.OrderBy(q => q.DisplayOrder))
                            {
                                <div class="card mb-3 question-card" data-question-id="@question.QuestionId">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <div>
                                            <span class="badge bg-secondary me-2">Q@(question.DisplayOrder)</span>
                                            <span class="badge bg-info me-2" aria-label="Question type: @(question.QuestionType.ToString())">
                                                @(question.QuestionType.ToString().Replace("MultipleChoice", "Multiple Choice").Replace("OpenEnded", "Open Ended"))
                                            </span>
                                            <span class="badge bg-@(question.IsRequired ? "danger" : "warning")" aria-label="Question status: @(question.IsRequired ? "Required" : "Optional")">
                                                @(question.IsRequired ? "Required" : "Optional")
                                            </span>
                                        </div>
                                        <div>
                                            <button type="button" class="btn btn-sm btn-outline-danger delete-question-btn" data-question-id="@question.QuestionId" aria-label="Delete question">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <h5 class="card-title">@question.QuestionText</h5>

                                        @if (question.QuestionType == Hometown_Application.Data.QuestionType.MultipleChoice)
                                        {
                                            <div class="options-container mt-3">
                                                <h6>Options:</h6>
                                                <ul class="list-group">
                                                    @foreach (var option in question.Options.OrderBy(o => o.DisplayOrder))
                                                    {
                                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                                            @option.OptionText
                                                            <button type="button" class="btn btn-sm btn-outline-danger delete-option-btn"
                                                                    data-option-id="@option.OptionId" aria-label="Delete option">
                                                                <i class="fas fa-times"></i>
                                                            </button>
                                                        </li>
                                                    }
                                                </ul>

                                                <div class="mt-3">
                                                    <div class="input-group">
                                                        <input type="text" class="form-control new-option-text"
                                                               placeholder="Add new option..." aria-label="New option text" />
                                                        <button type="button" class="btn btn-outline-primary add-option-btn"
                                                                data-question-id="@question.QuestionId" aria-label="Add option">
                                                            <i class="fas fa-plus"></i> Add
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle"></i> No questions added yet. Use the "Add New Question" button to add questions to your poll.
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Question Modal -->
<div class="modal fade" id="addQuestionModal" tabindex="-1" aria-labelledby="addQuestionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addQuestionModalLabel">Add New Question</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group mb-3">
                    <label for="questionText" class="form-label">Question Text</label>
                    <textarea id="questionText" class="form-control" rows="3" required aria-describedby="questionTextHelp"></textarea>
                    <small id="questionTextHelp" class="form-text text-muted">Enter the question you want to ask.</small>
                </div>
                <div class="form-group mb-3">
                    <label for="questionType" class="form-label">Question Type</label>
                    <select id="questionType" class="form-select" aria-describedby="questionTypeHelp">
                        @foreach (var type in Enum.GetValues(typeof(Hometown_Application.Data.QuestionType)))
                        {
                            <option value="@((int)type)">@type.ToString().Replace("MultipleChoice", "Multiple Choice").Replace("OpenEnded", "Open Ended")</option>
                        }
                    </select>
                    <small id="questionTypeHelp" class="form-text text-muted">Choose the type of question.</small>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveQuestionBtn">Add Question</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    @Html.AntiForgeryToken()
    <script>
        $(document).ready(function () {
            var token = $("input[name='__RequestVerificationToken']").val();

            // Add Question
            $('#saveQuestionBtn').click(function () {
                var questionText = $('#questionText').val();
                var questionType = $('#questionType').val();
                if (!questionText) {
                    alert('Please enter question text');
                    return;
                }
                $.ajax({
                    url: '@Url.Action("AddQuestion", "Poll")',
                    type: 'POST',
                    data: {
                        pollId: @Model.PollId,
                        questionText: questionText,
                        questionType: questionType,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            var questionTypeInt = parseInt(questionType);
                            var isMultipleChoice = questionTypeInt === @((int)Hometown_Application.Data.QuestionType.MultipleChoice);
                            var displayText = isMultipleChoice ? 'Multiple Choice' : 'Open Ended';
                            var newQuestionHtml = `
                                <div class="card mb-3 question-card" data-question-id="${response.questionId}">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <div>
                                            <span class="badge bg-secondary me-2">Q${$('#questionsContainer .question-card').length + 1}</span>
                                            <span class="badge bg-info me-2" aria-label="Question type: ${displayText}">${displayText}</span>
                                            <span class="badge bg-danger" aria-label="Question status: Required">Required</span>
                                        </div>
                                        <div>
                                            <button type="button" class="btn btn-sm btn-outline-danger delete-question-btn" data-question-id="${response.questionId}" aria-label="Delete question">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <h5 class="card-title">${questionText}</h5>
                                        ${isMultipleChoice ? `
                                            <div class="options-container mt-3">
                                                <h6>Options:</h6>
                                                <ul class="list-group"></ul>
                                                <div class="mt-3">
                                                    <div class="input-group">
                                                        <input type="text" class="form-control new-option-text" placeholder="Add new option..." aria-label="New option text" />
                                                        <button type="button" class="btn btn-outline-primary add-option-btn" data-question-id="${response.questionId}" aria-label="Add option">
                                                            <i class="fas fa-plus"></i> Add
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        ` : ''}
                                    </div>
                                </div>`;
                            $('#questionsContainer').append(newQuestionHtml);
                            $('#addQuestionModal').modal('hide');
                            $('#questionText').val('');
                        } else {
                            alert(response.message || 'An error occurred while adding the question');
                        }
                    },
                    error: function () {
                        alert('An error occurred while adding the question');
                    }
                });
            });

            // Delete Question
            $(document).on('click', '.delete-question-btn', function () {
                if (confirm('Are you sure you want to delete this question?')) {
                    var questionId = $(this).data('question-id');
                    $.ajax({
                        url: '@Url.Action("DeleteQuestion", "Poll")',
                        type: 'POST',
                        data: {
                            questionId: questionId,
                            __RequestVerificationToken: token
                        },
                        success: function (response) {
                            if (response.success) {
                                $(`div[data-question-id="${questionId}"]`).remove();
                            } else {
                                alert('An error occurred while deleting the question');
                            }
                        },
                        error: function () {
                            alert('An error occurred while deleting the question');
                        }
                    });
                }
            });

            // Add Option
            $(document).on('click', '.add-option-btn', function () {
                var questionId = $(this).data('question-id');
                var optionText = $(this).closest('.input-group').find('.new-option-text').val();
                if (!optionText) {
                    alert('Please enter option text');
                    return;
                }
                $.ajax({
                    url: '@Url.Action("AddOption", "Poll")',
                    type: 'POST',
                    data: {
                        questionId: questionId,
                        optionText: optionText,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            var newOptionHtml = `
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    ${optionText}
                                    <button type="button" class="btn btn-sm btn-outline-danger delete-option-btn"
                                            data-option-id="${response.optionId}" aria-label="Delete option">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </li>`;
                            $(`div[data-question-id="${questionId}"] .options-container ul`).append(newOptionHtml);
                            $(`div[data-question-id="${questionId}"] .new-option-text`).val('');
                        } else {
                            alert('An error occurred while adding the option');
                        }
                    },
                    error: function () {
                        alert('An error occurred while adding the option');
                    }
                });
            });

            // Delete Option
            $(document).on('click', '.delete-option-btn', function () {
                if (confirm('Are you sure you want to delete this option?')) {
                    var optionId = $(this).data('option-id');
                    $.ajax({
                        url: '@Url.Action("DeleteOption", "Poll")',
                        type: 'POST',
                        data: {
                            optionId: optionId,
                            __RequestVerificationToken: token
                        },
                        success: function (response) {
                            if (response.success) {
                                $(`button[data-option-id="${optionId}"]`).closest('li').remove();
                            } else {
                                alert('An error occurred while deleting the option');
                            }
                        },
                        error: function () {
                            alert('An error occurred while deleting the option');
                        }
                    });
                }
            });
        });
    </script>
}