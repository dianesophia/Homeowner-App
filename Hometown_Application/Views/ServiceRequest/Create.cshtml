@model Hometown_Application.ViewModels.CreateServiceRequestViewModel

@{
    ViewData["Title"] = "Request a Service";
}

<div class="container mt-5">
    <h2 class="text-center mb-4">Request a Service</h2>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

    <!-- Display Service Types -->
    <div class="row">
        @if (Model.RequestTypes != null && Model.RequestTypes.Any())
        {
            @foreach (var type in Model.RequestTypes)
            {
                <div class="col-md-4 mb-3">
                    <div class="card shadow-sm service-card @(type.IsActive ? "" : "disabled")" data-id="@type.RequestTypeId" data-name="@type.Name">
                        <div class="card-body">
                            <h5 class="card-title">@type.Name</h5>
                            <p class="card-text">@type.Description</p>
                            <p><strong>Department:</strong> @type.AssignedDepartment</p>
                            <p>
                                <strong>Status:</strong>
                                <span class="badge @(type.IsActive ? "bg-success" : "bg-danger")">
                                    @(type.IsActive ? "Available" : "Unavailable")
                                </span>
                            </p>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <p class="text-center">No request types available.</p>
        }
    </div>

    <!-- Modal for Service Request Details -->
    <div class="modal fade" id="serviceRequestModal" tabindex="-1" aria-labelledby="serviceRequestModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="serviceRequestModalLabel">Request a Service</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form asp-action="CreateRequest" method="post">
                        @Html.AntiForgeryToken()
                        <div asp-validation-summary="All" class="text-danger"></div>
                        <input type="hidden" asp-for="ServiceRequest.RequestTypeId" id="selectedRequestTypeId" required />

                        <div class="mb-3">
                            <label class="form-label">Service Name</label>
                            <input type="text" id="selectedServiceName" class="form-control" readonly />
                        </div>

                        <div class="mb-3">
                            <label asp-for="ServiceRequest.Details" class="form-label"></label>
                            <textarea asp-for="ServiceRequest.Details" class="form-control" required></textarea>
                            <span asp-validation-for="ServiceRequest.Details" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ServiceRequest.Location" class="form-label"></label>
                            <input asp-for="ServiceRequest.Location" class="form-control" required />
                            <span asp-validation-for="ServiceRequest.Location" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ServiceRequest.Schedule" class="form-label"></label>
                            <input asp-for="ServiceRequest.Schedule" type="datetime-local" class="form-control" required />
                            <span asp-validation-for="ServiceRequest.Schedule" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ServiceRequest.Urgency" class="form-label"></label>
                            <select asp-for="ServiceRequest.Urgency" class="form-control" asp-items="Html.GetEnumSelectList<UrgencyLevel>()" required>
                                <option value="">Select urgency</option>
                            </select>
                            <span asp-validation-for="ServiceRequest.Urgency" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ServiceRequest.Email" class="form-label"></label>
                            <input asp-for="ServiceRequest.Email" type="email" class="form-control" required />
                            <span asp-validation-for="ServiceRequest.Email" class="text-danger"></span>
                        </div>

                        <button type="submit" class="btn btn-primary">Submit Request</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="text-center mt-3">
        <a class="btn btn-secondary" asp-controller="ServiceRequest" asp-action="RequestConfirmation">
            <i class="fas fa-users-cog me-2"></i>View Requests
        </a>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".service-card").forEach(card => {
                card.addEventListener("click", function () {
                    if (card.classList.contains("disabled")) return;

                    let requestId = this.getAttribute("data-id");
                    let serviceName = this.getAttribute("data-name");

                    // Log for debugging
                    console.log("Selected RequestTypeId:", requestId, "ServiceName:", serviceName);

                    // Set values in the modal
                    document.getElementById("selectedRequestTypeId").value = requestId;
                    document.getElementById("selectedServiceName").value = serviceName;

                    // Show the modal
                    var modal = new bootstrap.Modal(document.getElementById("serviceRequestModal"));
                    modal.show();
                });
            });

            // Validate Schedule on change
            document.getElementById("ServiceRequest_Schedule").addEventListener("change", function () {
                let selectedDate = new Date(this.value);
                let now = new Date();
                now.setMinutes(now.getMinutes() + 5); // Add a 5-minute buffer
                if (selectedDate <= now) {
                    alert("Please select a date and time at least 5 minutes in the future.");
                    this.value = "";
                }
            });
        });
    </script>
}

<style>
    .service-card {
        cursor: pointer;
        transition: 0.3s;
    }

        .service-card:hover {
            border: 2px solid #007bff;
            background-color: #f8f9fa;
        }

        .service-card.disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
</style>