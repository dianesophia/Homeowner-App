@model List<Hometown_Application.Models.ServiceRequestModel>

@{
    ViewData["Title"] = "Your Submitted Requests";
}

<style>
    :root {
        --primary-color: #6F754E;
        --primary-light: #8a916a;
        --primary-dark: #5a6040;
        --secondary-color: #A08D67;
        --secondary-light: #b8a787;
        --background-color: #E6DDC4;
        --text-color: #2F3A31;
        --card-bg: #FFFFFF;
        --danger-color: #dc3545;
        --success-color: #198754;
        --warning-color: #ffc107;
        --info-color: #0dcaf0;
        --border-radius: 16px;
        --shadow: 0px 6px 12px rgba(0, 0, 0, 0.1);
        --transition: all 0.3s ease;
    }

    .page-title {
        font-size: 2.2rem;
        color: var(--text-color);
        margin-bottom: 1.5rem;
        font-weight: 600;
        position: relative;
        padding-bottom: 8px;
    }

        .page-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 80px;
            height: 3px;
            background-color: var(--primary-color);
            border-radius: 3px;
        }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        flex-wrap: wrap;
        gap: 20px;
        margin-top: auto;
    }

    .card {
        background-color: var(--card-bg);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        padding: 20px;
        margin: 20px auto;
        max-width: 100%;
    }

    .card-header {
        background-color: var(--primary-color) !important;
        color: white !important;
        border-top-left-radius: var(--border-radius) !important;
        border-top-right-radius: var(--border-radius) !important;
        padding: 15px 20px;
    }

    .card-body {
        padding: 20px;
    }

    .card-footer {
        border-top: 1px solid rgba(0, 0, 0, 0.1);
        padding: 15px 20px;
    }

    .alert {
        border-radius: var(--border-radius);
        padding: 12px 20px;
        margin-bottom: 20px;
        border: none;
    }

    .alert-success {
        background-color: rgba(25, 135, 84, 0.1);
        color: var(--success-color);
        border-left: 4px solid var(--success-color);
    }

    .alert-danger {
        background-color: rgba(220, 53, 69, 0.1);
        color: var(--danger-color);
        border-left: 4px solid var(--danger-color);
    }

    .btn {
        border-radius: var(--border-radius);
        padding: 8px 20px;
        transition: var(--transition);
    }

    .btn-sm {
        padding: 5px 10px;
        font-size: 0.9rem;
    }

    .btn-primary {
        background-color: var(--primary-color);
        color: white;
        border: none;
    }

        .btn-primary:hover {
            background-color: var(--primary-light);
            transform: translateY(-2px);
            color: white;
        }

    .btn-warning {
        background-color: var(--warning-color);
        color: var(--text-color);
        border: none;
    }

        .btn-warning:hover {
            background-color: #e0a800;
            transform: translateY(-2px);
        }

    .btn-danger {
        background-color: var(--danger-color);
        color: white;
        border: none;
    }

        .btn-danger:hover {
            background-color: #bd2130;
            transform: translateY(-2px);
        }

    .btn-success {
        background-color: var(--success-color);
        color: white;
        border: none;
    }

        .btn-success:hover {
            background-color: #1e7e34;
            transform: translateY(-2px);
        }

    .btn-secondary {
        background-color: var(--secondary-color);
        color: white;
        border: none;
    }

        .btn-secondary:hover {
            background-color: var(--secondary-light);
            transform: translateY(-2px);
            color: white;
        }

    .badge {
        padding: 6px 10px;
        border-radius: 10px;
        font-weight: 500;
        font-size: 0.8rem;
    }

    .bg-success {
        background-color: var(--success-color) !important;
    }

    .bg-warning {
        background-color: var(--warning-color) !important;
        color: var(--text-color);
    }

    .bg-info {
        background-color: var(--info-color) !important;
    }

    .modal-content {
        border-radius: var(--border-radius);
        border: none;
    }

    .modal-header {
        background-color: var(--primary-light);
        color: white;
        border-top-left-radius: var(--border-radius);
        border-top-right-radius: var(--border-radius);
        border-bottom: none;
    }

    .modal-footer {
        border-top: 1px solid rgba(0, 0, 0, 0.1);
    }

    .lead {
        color: var(--text-color);
        font-weight: 500;
    }

    .text-center {
        text-align: center;
    }

    .text-end {
        text-align: right;
    }

    .mt-3 {
        margin-top: 1rem;
    }

    .mb-4 {
        margin-bottom: 1.5rem;
    }

    .shadow-sm {
        box-shadow: 0 .125rem .25rem rgba(0,0,0,.075);
    }

    .shadow-lg {
        box-shadow: 0 1rem 3rem rgba(0,0,0,.175);
    }
</style>

<div class="container mt-5">
    <div class="card shadow-lg">
        <div class="card-header text-center">
            <h3 class="page-title m-0">Your Submitted Service Requests</h3>
        </div>
        <div class="card-body">
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger">@TempData["Error"]</div>
            }
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">@TempData["SuccessMessage"]</div>
            }
            @if (Model != null && Model.Any())
            {
                <p class="lead">Below are all the service requests you have submitted:</p>

                @foreach (var request in Model)
                {
                    <div class="card mb-4 shadow-sm">
                        <div class="card-body">
                            <h5 class="card-title"><strong>Service Name:</strong> @(request.RequestType?.Name ?? "Unknown")</h5>
                            <p><strong>Request Details:</strong> @request.Details</p>
                            <p><strong>Location:</strong> @request.Location</p>
                            <p><strong>Urgency Level:</strong> @request.Urgency</p>
                            <p><strong>Email:</strong> @request.Email</p>
                            <p><strong>Requested On:</strong> @request.AddedOn.ToString("MMMM dd, yyyy hh:mm tt")</p>
                            <p>
                                <strong>Status:</strong>
                                <span class="badge @(request.Status?.StatusName == "Completed" ? "bg-success" : (request.Status?.StatusName == "Confirmed" ? "bg-info" : "bg-warning"))">
                                    @(request.Status?.StatusName ?? "Unknown")
                                </span>
                            </p>
                        </div>
                        <div class="card-footer text-end">
                            <a asp-action="Edit" asp-route-id="@request.ServiceRequestId" class="btn btn-warning btn-sm">Edit</a>
                            <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deleteModal"
                                    onclick="setDeleteId(@request.ServiceRequestId, '@(request.RequestType?.Name?.Replace("'", "\\'") ?? "Unknown")')">
                                Delete
                            </button>
                            @if (User.IsInRole("Admin") && request.Status?.StatusName == "Pending")
                            {
                                <form asp-action="ConfirmServiceRequest" method="post" style="display:inline;">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@request.ServiceRequestId" />
                                    <button type="submit" class="btn btn-success btn-sm" onclick="return confirm('Are you sure you want to confirm this request?')">Confirm</button>
                                </form>
                            }
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="lead text-center">You have not submitted any service requests yet.</p>
            }

            <div class="text-center mt-3">
                <a asp-action="Create" class="btn btn-primary">Back to Home</a>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the request for "<span id="deleteRequestName"></span>"?</p>
            </div>
            <div class="modal-footer">
                <form id="deleteForm" asp-action="Delete" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="deleteRequestId" />
                    <button type="submit" class="btn btn-danger">Confirm Delete</button>
                </form>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<script>
    function setDeleteId(id, name) {
        document.getElementById("deleteRequestId").value = id;
        document.getElementById("deleteRequestName").innerText = name;
    }
</script>