@model List<Hometown_Application.Models.FeedbackComplaintModel>
@using Hometown_Application.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Complaint";
    var statuses = new List<string> { "Pending", "In Progress", "Resolved", "Closed" };
}

<style>
    :root {
        --primary-color: #6F754E;
        --primary-light: #8a916a;
        --primary-dark: #5a604e;
        --secondary-color: #A08D67;
        --background-color: #E6DDC4;
        --text-color: #2F3A31;
        --white: #FFFFFF;
        --border-radius: 16px;
        --shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        --transition: all 0.3s ease-in-out;
    }

    .navbar {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        background-color: var(--primary-color);
        box-shadow: var(--shadow);
        z-index: 1000;
        min-height: 100px;
        padding: 15px 20px;
        font-family: 'Marcellus', serif;
    }

    .navbar-brand {
        font-size: 1.2rem;
        font-weight: normal;
        color: white;
    }

        .navbar-brand:hover {
            transform: scale(1.05);
        }

    .navbar-nav .nav-link {
        color: white;
        font-weight: 500;
        margin: 0 10px;
        padding: 8px 16px;
        border-radius: var(--border-radius);
        transition: var(--transition);
    }

        .navbar-nav .nav-link:hover {
            background: var(--primary-light);
            color: white;
            transform: translateY(-2px);
        }

    .user-info {
        background: var(--primary-light);
        padding: 8px 16px;
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        gap: 8px;
        backdrop-filter: blur(5px);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

        .user-info i {
            font-size: 1.2rem;
        }

    .content {
        flex: 1;
        margin-top: 50px;
    }


    body {
        background-color: var(--background-color);
        color: var(--text-color);
        font-family: 'Marcellus', serif;
        padding-top: 80px;
    }

    .complaints-container {
        background-color: var(--white);
        border-radius: var(--border-radius);
        box-shadow: 0 10px 30px rgba(111, 117, 78, 0.2);
        padding: 40px;
        max-width: 1000px;
        margin: 0 auto;
        position: relative;
        overflow: hidden;
    }

        .complaints-container::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: repeating-linear-gradient( 45deg, rgba(111, 117, 78, 0.02) 0, rgba(111, 117, 78, 0.02) 10px, transparent 10px, transparent 20px );
            z-index: 1;
            opacity: 0.3;
            pointer-events: none;
        }

    .page-header {
        text-align: center;
        margin-bottom: 40px;
        position: relative;
    }

        .page-header h1 {
            color: var(--primary-color);
            font-weight: 700;
            font-size: 2.5rem;
            position: relative;
            display: inline-block;
        }

            .page-header h1::after {
                content: '';
                position: absolute;
                bottom: -10px;
                left: 0;
                width: 100%;
                height: 4px;
                background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
                transform: scaleX(0);
                transform-origin: right;
                transition: transform 0.5s ease;
            }

            .page-header h1:hover::after {
                transform: scaleX(1);
                transform-origin: left;
            }

    /* Custom Tab Styling */
    .nav-tabs {
        border-bottom: 2px solid var(--primary-light);
        margin-bottom: 30px;
    }

        .nav-tabs .nav-link {
            color: var(--primary-color);
            font-weight: 600;
            border: none;
            padding: 15px 25px;
            margin-right: 10px;
            border-radius: var(--border-radius) var(--border-radius) 0 0;
            transition: var(--transition);
        }

            .nav-tabs .nav-link.active {
                background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
                color: var(--white);
            }

            .nav-tabs .nav-link:hover {
                background-color: var(--primary-light);
                color: var(--white);
            }

    /* Card Styling */
    .card {
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        margin-bottom: 20px;
        overflow: hidden;
    }

    .card-header {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark)) !important;
        color: var(--white) !important;
    }

    /* Button Styling */
    .btn-primary, .btn-success, .btn-warning {
        border-radius: 50px;
        text-transform: uppercase;
        letter-spacing: 1px;
        transition: var(--transition);
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        border: none;
    }

    .btn-success {
        background: linear-gradient(135deg, #28a745, #218838);
        border: none;
    }

    .btn-warning {
        background: linear-gradient(135deg, #ffc107, #e0a800);
        border: none;
        color: var(--text-color);
    }

    /* Modal Styling */
    .modal-content {
        border-radius: var(--border-radius);
    }

    .modal-header {
        background-color: var(--primary-light);
        color: var(--white);
    }

    .back-button-container {
        position: absolute;
        top: 20px;
        left: 20px;
        z-index: 10;
    }

    .btn-back {
        background: linear-gradient(135deg, var(--secondary-color), #8a7d5a);
        color: var(--white);
        border: none;
        padding: 10px 20px;
        border-radius: 50px;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 10px;
        font-weight: 600;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: var(--transition);
    }

        .btn-back:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
            background: linear-gradient(135deg, #8a7d5a, var(--secondary-color));
        }

        .btn-back i {
            margin-right: 8px;
        }
</style>

<nav class="navbar navbar-expand-lg">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">
            <i class="fas fa-home me-2"></i>
            Golden Haven
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-auto">
                @if (SignInManager.IsSignedIn(User))
                {
                    var user = await UserManager.GetUserAsync(User);
                    if (user != null)
                    {
                        <div class="nav-item">
                            <a class="nav-link" asp-controller="Dashboard" asp-action="Index">
                                <i class="fas fa-user"></i>
                                <span>@user.FirstName @user.LastName</span>
                            </a>
                        </div>
                    }
                }
                @if (SignInManager.IsSignedIn(User))
                {
                    if (User.IsInRole("Admin"))
                    {
                        <li class="nav-item"><a class="nav-link" asp-controller="ManageUsers" asp-action="Index"><i class="fas fa-users-cog me-2"></i>Management Users</a></li>
                    }
                }
                <li class="nav-item"><a class="nav-link" asp-controller="Contact" asp-action="Index"><i class="fas fa-calendar me-2"></i>Contact</a></li>
                <li class="nav-item"><a class="nav-link" asp-controller="Event" asp-action="Index"><i class="fas fa-address-book me-2"></i>Calendar</a></li>
                <li class="nav-item"><a class="nav-link" asp-controller="Document" asp-action="Index"><i class="fas fa-file-alt me-2"></i>Document</a></li>
                <!--<li class="nav-item"><a class="nav-link" asp-controller="Document" asp-action="FileDownload"><i class="fas fa-download me-2"></i>Download</a></li>-->
                <li class="nav-item">
                    <div class="user-info @(ViewContext.RouteData.Values["Controller"]?.ToString() == "FeedbackComplaint" ? "active-tab" : "")">
                        <i class="fas fa-exclamation-circle me-2"></i>
                        <span>Issues</span>
                    </div>
                </li>
                <li class="nav-item"><a class="nav-link" asp-controller="Home" asp-action="Index"><i class="fas fa-sign-out-alt me-2"></i>Logout</a></li>
            </ul>
        </div>
    </div>
</nav>
<div class="complaints-container">

    <div class="back-button-container">
        <a href="@Url.Action("Index", "FeedbackComplaint")" class="btn-back">
            <i class="fas fa-arrow-left"></i>Back
        </a>
    </div>

    <div class="page-header">
        <h1>Complaint</h1>
    </div>

    <!-- Tabs -->
    <ul class="nav nav-tabs" id="complaintStatusTabs" role="tablist">
        @foreach (var status in statuses)
        {
            <li class="nav-item" role="presentation">
                <button class="nav-link @(status == "Pending" ? "active" : "")"
                        id="tab-@status.Replace(" ", "")"
                        data-bs-toggle="tab"
                        data-bs-target="#complaint-@status.Replace(" ", "")"
                        type="button"
                        role="tab"
                        aria-controls="complaint-@status.Replace(" ", "")"
                        aria-selected="@(status == "Pending" ? "true" : "false")">
                    @status
                </button>
            </li>
        }
    </ul>

    <!-- Rest of the original content remains the same -->
    <div class="tab-content mt-3" id="complaintTabContent">
        @foreach (var status in statuses)
        {
            var complaintByStatus = Model
            .Where(item => item.Status.StatusName == status && item.Type == "Complaint") // Ensure only complaints are shown
            .ToList();

            <div class="tab-pane fade @(status == "Pending" ? "show active" : "")"
                 id="complaint-@status.Replace(" ", "")"
                 role="tabpanel"
                 aria-labelledby="tab-@status.Replace(" ", "")">

                @if (complaintByStatus.Any())
                {
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Message</th>
                                <th>Reply</th>
                                <th>Status</th>
                                <th>Submitted On</th>
                                <th>Image</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in complaintByStatus)
                            {
                                <tr>
                                    <td>@item.Title</td>
                                    <td>@item.Message</td>
                                    <td>@(string.IsNullOrEmpty(item.AdminReply) ? "No Reply" : item.AdminReply)</td>
                                    <td>@item.Status?.StatusName</td>
                                    <td>@item.AddedOn.ToString("MM/dd/yyyy")</td>
                                    <td>
                                        @if (item.Image != null)
                                        {
                                            <img src="data:image/jpeg;base64,@Convert.ToBase64String(item.Image)" alt="Complaint Image" width="100" height="100" />
                                        }
                                        else
                                        {
                                            <span>No Image</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p class="text-muted">No complaint available for @status.</p>
                }
            </div>
        }
    </div>

    <!-- Script to switch to the updated tab -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var triggerTabList = [].slice.call(document.querySelectorAll('#complaintStatusTabs button'))
            triggerTabList.forEach(function (triggerEl) {
                var tabTrigger = new bootstrap.Tab(triggerEl)
                triggerEl.addEventListener('click', function (event) {
                    event.preventDefault()
                    tabTrigger.show()
                })
            })
        });
    </script>

