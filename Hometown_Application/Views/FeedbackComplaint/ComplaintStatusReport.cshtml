@model List<Hometown_Application.Models.FeedbackComplaintModel>
@using Hometown_Application.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Complaint";
    var statuses = new List<string> { "Pending", "In Progress", "Resolved", "Closed" };
}
<style>
    :root {
        --primary-color: #6F754E;
        --primary-light: #8a916a;
        --primary-dark: #5a604e;
        --secondary-color: #A08D67;
        --background-color: #E6DDC4;
        --text-color: #2F3A31;
        --white: #FFFFFF;
        --border-radius: 16px;
        --shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        --transition: all 0.3s ease-in-out;
    }

    .navbar {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        background-color: var(--primary-color);
        box-shadow: var(--shadow);
        z-index: 1000;
        min-height: 100px;
        padding: 15px 20px;
        font-family: 'Marcellus', serif;
    }

    .navbar-brand {
        font-size: 1.2rem;
        font-weight: normal;
        color: white;
    }

        .navbar-brand:hover {
            transform: scale(1.05);
        }

    .navbar-nav .nav-link {
        color: white;
        font-weight: 500;
        margin: 0 10px;
        padding: 8px 16px;
        border-radius: var(--border-radius);
        transition: var(--transition);
    }

        .navbar-nav .nav-link:hover {
            background: var(--primary-light);
            color: white;
            transform: translateY(-2px);
        }

    .user-info {
        background: var(--primary-light);
        padding: 8px 16px;
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        gap: 8px;
        backdrop-filter: blur(5px);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

        .user-info i {
            font-size: 1.2rem;
        }
    .complaints-container {
        background-color: var(--white);
        border-radius: var(--border-radius);
        box-shadow: 0 10px 30px rgba(111, 117, 78, 0.2);
        padding: 25px;
        width: 100%;
        margin: 0 auto;
        position: relative;
        overflow: hidden;
        margin-bottom: 2rem;
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

        .complaints-container::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: repeating-linear-gradient( 45deg, rgba(111, 117, 78, 0.02) 0, rgba(111, 117, 78, 0.02) 10px, transparent 10px, transparent 20px );
            z-index: 1;
            opacity: 0.3;
            pointer-events: none;
        }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        flex-wrap: wrap;
        gap: 20px;
        margin-top: auto;
    }

    /*.page-header h1 {
                        color: var(--primary-color);
                        font-weight: 700;
                        font-size: 2.5rem;
                        position: relative;
                        display: inline-block;
                    }

                        .page-header h1::after {
                            content: '';
                            position: absolute;
                            bottom: -10px;
                            left: 0;
                            width: 100%;
                            height: 4px;
                            background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
                            transform: scaleX(0);
                            transform-origin: right;
                            transition: transform 0.5s ease;
                        }

                        .page-header h1:hover::after {
                            transform: scaleX(1);
                            transform-origin: left;
                        }*/

    .page-title {
        font-size: 2.2rem;
        color: var(--text-color);
        margin-bottom: 1.5rem;
        font-weight: 600;
        position: relative;
        padding-bottom: 8px;
    }

        .page-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 80px;
            height: 3px;
            background-color: var(--primary-color);
            border-radius: 3px;
        }

    /* Custom Tab Styling */
    .nav-tabs {
        border-bottom: 2px solid var(--primary-light);
        margin-bottom: 30px;
    }

        .nav-tabs .nav-link {
            color: var(--primary-color);
            font-weight: 600;
            border: none;
            padding: 15px 25px;
            margin-right: 10px;
            border-radius: var(--border-radius) var(--border-radius) 0 0;
            transition: var(--transition);
        }

            .nav-tabs .nav-link.active {
                background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
                color: var(--white);
            }

            .nav-tabs .nav-link:hover {
                background-color: var(--primary-light);
                color: var(--white);
            }

    /* Card Styling */
    .card {
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        margin-bottom: 20px;
        overflow: hidden;
    }

    .card-header {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark)) !important;
        color: var(--white) !important;
    }

    /* Button Styling */
    .btn-primary, .btn-success, .btn-warning {
        border-radius: 50px;
        text-transform: uppercase;
        letter-spacing: 1px;
        transition: var(--transition);
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        border: none;
    }

    .btn-success {
        background: linear-gradient(135deg, #28a745, #218838);
        border: none;
    }

    .btn-warning {
        background: linear-gradient(135deg, #ffc107, #e0a800);
        border: none;
        color: var(--text-color);
    }

    /* Modal Styling */
    .modal-content {
        border-radius: var(--border-radius);
    }

    .modal-header {
        background-color: var(--primary-light);
        color: var(--white);
    }

    .back-button-container {
        display: flex;
        flex-direction: row; /* Ensure buttons are in a row */
        gap: 15px;
        flex-wrap: nowrap; /* Prevent wrapping */
    }

    .btn-back {
        background: linear-gradient(135deg, var(--secondary-color), #8a7d5a);
        color: var(--white);
        border: none;
        padding: 10px 20px;
        border-radius: 50px;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        font-weight: 600;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: var(--transition);
        display: flex;
        flex-direction: row; /* Ensure buttons are in a row */
        gap: 15px;
        flex-wrap: nowrap; /* Prevent wrapping */
    }

        .btn-back:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
            background: linear-gradient(135deg, #8a7d5a, var(--secondary-color));
        }

    .btn-secondary:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 25px rgba(111, 117, 78, 0.4);
    }

        .btn-secondary:hover::before {
            left: 100%;
        }

    .btn-secondary i {
        font-size: 1.2rem;
        margin-right: 8px;
    }

    .form-control, .form-select {
        border-radius: var(--border-radius);
        padding: 12px 15px;
        margin-bottom: 15px;
        border: 1px solid var(--primary-light);
        transition: var(--transition);
    }

        .form-control:focus, .form-select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(111, 117, 78, 0.25);
        }
</style>

<div class="content">
    <div class="page-header">
        <h1 class="page-title">Complaint Status</h1>
        <div class="back-button-container">
            <a href="@Url.Action("Index", "FeedbackComplaint")" class="btn-back">
                <i class="fas fa-arrow-left"></i> Back
            </a>
        </div>
    </div>
<div class="complaints-container">
    <!-- Tabs -->
    <ul class="nav nav-tabs" id="complaintStatusTabs" role="tablist">
        @foreach (var status in statuses)
        {
            <li class="nav-item" role="presentation">
                <button class="nav-link @(status == "Pending" ? "active" : "")"
                        id="tab-@status.Replace(" ", "")"
                        data-bs-toggle="tab"
                        data-bs-target="#complaint-@status.Replace(" ", "")"
                        type="button"
                        role="tab"
                        aria-controls="complaint-@status.Replace(" ", "")"
                        aria-selected="@(status == "Pending" ? "true" : "false")">
                    @status
                </button>
            </li>
        }
    </ul>

    <!-- Rest of the original content remains the same -->
    <div class="tab-content mt-3" id="complaintTabContent">
        @foreach (var status in statuses)
        {
            var complaintByStatus = Model
            .Where(item => item.Status.StatusName == status && item.Type == "Complaint") // Ensure only complaints are shown
            .ToList();

            <div class="tab-pane fade @(status == "Pending" ? "show active" : "")"
                 id="complaint-@status.Replace(" ", "")"
                 role="tabpanel"
                 aria-labelledby="tab-@status.Replace(" ", "")">

                @if (complaintByStatus.Any())
                {
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Message</th>
                                <th>Reply</th>
                                <th>Status</th>
                                <th>Submitted On</th>
                                <th>Image</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in complaintByStatus)
                            {
                                <tr>
                                    <td>@item.Title</td>
                                    <td>@item.Message</td>
                                    <td>@(string.IsNullOrEmpty(item.AdminReply) ? "No Reply" : item.AdminReply)</td>
                                    <td>@item.Status?.StatusName</td>
                                    <td>@item.AddedOn.ToString("MM/dd/yyyy")</td>
                                    <td>
                                        @if (item.Image != null)
                                        {
                                            <img src="data:image/jpeg;base64,@Convert.ToBase64String(item.Image)" alt="Complaint Image" width="100" height="100" />
                                        }
                                        else
                                        {
                                            <span>No Image</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p class="text-muted">No complaint available for @status.</p>
                }
            </div>
        }
    </div>
    </div>

    </div>

    <!-- Script to switch to the updated tab -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var triggerTabList = [].slice.call(document.querySelectorAll('#complaintStatusTabs button'))
            triggerTabList.forEach(function (triggerEl) {
                var tabTrigger = new bootstrap.Tab(triggerEl)
                triggerEl.addEventListener('click', function (event) {
                    event.preventDefault()
                    tabTrigger.show()
                })
            })
        });
    </script>

