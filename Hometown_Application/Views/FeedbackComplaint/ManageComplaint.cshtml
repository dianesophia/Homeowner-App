@model List<Hometown_Application.Models.FeedbackComplaintModel>
@using Hometown_Application.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Manage Complaints";
}

<style>
    :root {
        --primary-color: #6F754E;
        --primary-light: #8a916a;
        --primary-dark: #5a604e;
        --secondary-color: #A08D67;
        --background-color: #E6DDC4;
        --text-color: #2F3A31;
        --white: #FFFFFF;
        --border-radius: 16px;
        --shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        --transition: all 0.3s ease-in-out;
    }

    .navbar {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        background-color: var(--primary-color);
        box-shadow: var(--shadow);
        z-index: 1000;
        min-height: 100px;
        padding: 15px 20px;
        font-family: 'Marcellus', serif;
    }

    .navbar-brand {
        font-size: 1.2rem;
        font-weight: normal;
        color: white;
    }

        .navbar-brand:hover {
            transform: scale(1.05);
        }

    .navbar-nav .nav-link {
        color: white;
        font-weight: 500;
        margin: 0 10px;
        padding: 8px 16px;
        border-radius: var(--border-radius);
        transition: var(--transition);
    }

        .navbar-nav .nav-link:hover {
            background: var(--primary-light);
            color: white;
            transform: translateY(-2px);
        }

    .user-info {
        background: var(--primary-light);
        padding: 8px 16px;
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        gap: 8px;
        backdrop-filter: blur(5px);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

        .user-info i {
            font-size: 1.2rem;
        }
    .complaints-container {
        background-color: var(--white);
        border-radius: var(--border-radius);
        box-shadow: 0 10px 30px rgba(111, 117, 78, 0.2);
        padding: 25px;
        width: 100%;
        margin: 0 auto;
        position: relative;
        overflow: hidden;
        margin-bottom: 2rem;
        display: flex;
        flex-direction: column;
    }

        .complaints-container::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: repeating-linear-gradient( 45deg, rgba(111, 117, 78, 0.02) 0, rgba(111, 117, 78, 0.02) 10px, transparent 10px, transparent 20px );
            z-index: 1;
            opacity: 0.3;
            pointer-events: none;
        }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        flex-wrap: wrap;
        gap: 20px;
        margin-top: auto;
    }

    /*.page-header h1 {
                color: var(--primary-color);
                font-weight: 700;
                font-size: 2.5rem;
                position: relative;
                display: inline-block;
            }

                .page-header h1::after {
                    content: '';
                    position: absolute;
                    bottom: -10px;
                    left: 0;
                    width: 100%;
                    height: 4px;
                    background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
                    transform: scaleX(0);
                    transform-origin: right;
                    transition: transform 0.5s ease;
                }

                .page-header h1:hover::after {
                    transform: scaleX(1);
                    transform-origin: left;
                }*/

    .page-title {
        font-size: 2.2rem;
        color: var(--text-color);
        margin-bottom: 1.5rem;
        font-weight: 600;
        position: relative;
        padding-bottom: 8px;
    }

        .page-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 80px;
            height: 3px;
            background-color: var(--primary-color);
            border-radius: 3px;
        }

    /* Custom Tab Styling */
    .nav-tabs {
        border-bottom: 2px solid var(--primary-light);
        margin-bottom: 30px;
    }

        .nav-tabs .nav-link {
            color: var(--primary-color);
            font-weight: 600;
            border: none;
            padding: 15px 25px;
            margin-right: 10px;
            border-radius: var(--border-radius) var(--border-radius) 0 0;
            transition: var(--transition);
        }

            .nav-tabs .nav-link.active {
                background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
                color: var(--white);
            }

            .nav-tabs .nav-link:hover {
                background-color: var(--primary-light);
                color: var(--white);
            }

    /* Card Styling */
    .card {
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        margin-bottom: 20px;
        overflow: hidden;
    }

    .card-header {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark)) !important;
        color: var(--white) !important;
    }

    /* Button Styling */
    .btn-primary, .btn-success, .btn-warning {
        border-radius: 50px;
        text-transform: uppercase;
        letter-spacing: 1px;
        transition: var(--transition);
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        border: none;
    }

    .btn-success {
        background: linear-gradient(135deg, #28a745, #218838);
        border: none;
    }

    .btn-warning {
        background: linear-gradient(135deg, #ffc107, #e0a800);
        border: none;
        color: var(--text-color);
    }

    /* Modal Styling */
    .modal-content {
        border-radius: var(--border-radius);
    }

    .modal-header {
        background-color: var(--primary-light);
        color: var(--white);
    }

    .back-button-container {
        display: flex;
        flex-direction: row; /* Ensure buttons are in a row */
        gap: 15px;
        flex-wrap: nowrap; /* Prevent wrapping */
    }

    .btn-back {
        background: linear-gradient(135deg, var(--secondary-color), #8a7d5a);
        color: var(--white);
        border: none;
        padding: 10px 20px;
        border-radius: 50px;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        font-weight: 600;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: var(--transition);
        display: flex;
        flex-direction: row; /* Ensure buttons are in a row */
        gap: 15px;
        flex-wrap: nowrap; /* Prevent wrapping */
    }

        .btn-back:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
            background: linear-gradient(135deg, #8a7d5a, var(--secondary-color));
        }
</style>
<div class="content">
    <div class="page-header">
        <h1 class="page-title">Complaints Management</h1>
        <div class="back-button-container">
            <a href="@Url.Action("Index", "FeedbackComplaint")" class="btn-back">
                <i class="fas fa-arrow-left"></i> Back
            </a>
        </div>
    </div>
    <div class="complaints-container">
        <!-- Tabs -->
        <ul class="nav nav-tabs mb-4" id="complaintTabs" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="pending-tab" data-bs-toggle="tab" href="#pending" role="tab">Pending</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="onprogress-tab" data-bs-toggle="tab" href="#onprogress" role="tab">In Progress</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="resolved-tab" data-bs-toggle="tab" href="#resolved" role="tab">Resolved</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="canceled-tab" data-bs-toggle="tab" href="#canceled" role="tab">Closed</a>
            </li>
        </ul>

        <!-- Rest of the original content remains the same -->
        <div class="tab-content" id="complaintTabContent">
            @foreach (var status in new[] { "Pending", "In Progress", "Resolved", "Closed" })
            {
                string tabId = status switch
                {
                    "In Progress" => "onprogress",
                    "Closed" => "canceled",
                    _ => status.ToLower().Replace(" ", "")
                };

                <div class="tab-pane fade @(status == "Pending" ? "show active" : "")" id="@tabId" role="tabpanel">
                    <h2 class="mb-3">@status Complaint</h2>

                    @foreach (var item in Model.Where(f => f.Status.StatusName == status && f.Type == "Complaint"))
                    {
                        <div class="card border-primary mb-4">
                            <div class="card-header bg-primary text-white">
                                <h5 class="mb-0">@item.Title</h5>
                            </div>
                            <div class="card-body">
                                <p><strong>User:</strong> @(item.ApplicationUser != null ? $"{item.ApplicationUser.FirstName} {item.ApplicationUser.LastName}" : "Unknown")</p>
                                <p class="card-text"><small class="text-muted"> @item.AddedOn.ToString("MMMM dd, yyyy")</small></p>
                                <p class="card-text">@item.Message</p>
                                <p><strong>@item.Status?.StatusName</strong></p>
                                @if (item.Image != null)
                                {
                                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(item.Image)" alt="Complaint Image" width="100" height="100" />
                                }
                                else
                                {
                                    <span>No Image</span>
                                }

                                <!-- Admin Reply -->
                                @if (!string.IsNullOrEmpty(item.AdminReply))
                                {
                                    <div class="alert alert-info p-2 mt-3">
                                        <strong>Admin Reply:</strong> @item.AdminReply
                                    </div>
                                }

                                <!-- Admin Note -->
                                @if (!string.IsNullOrEmpty(item.AdminNote))
                                {
                                    <div class="alert alert-warning p-2 mt-3">
                                        <strong>Admin Note:</strong> @item.AdminNote
                                    </div>
                                }

                                <hr />

                                <!-- Status Update Form -->
                                <form asp-action="ComplaintUpdateStatus" asp-controller="FeedbackComplaint" method="post" class="status-form">
                                    <input type="hidden" name="id" value="@item.FeedbackComplaintId" />
                                    <div class="form-group mb-3">
                                        <label class="fw-bold">Change Status:</label>
                                        <select class="form-control form-control-sm status-dropdown" name="newStatus" required>
                                            <option value="Pending" selected="@(item.Status.StatusName == "Pending")">Pending</option>
                                            <option value="In Progress" selected="@(item.Status.StatusName == "In Progress")">In Progress</option>
                                            <option value="Resolved" selected="@(item.Status.StatusName == "Resolved")">Resolved</option>
                                            <option value="Closed" selected="@(item.Status.StatusName == "Closed")">Closed</option>
                                        </select>
                                    </div>
                                    <button type="submit" class="btn btn-primary btn-sm">Update Status</button>
                                </form>

                                <!-- Open Reply Modal Button -->
                                <button type="button" class="btn btn-success btn-sm mt-2" data-bs-toggle="modal" data-bs-target="#replyModal-@item.FeedbackComplaintId">
                                    Reply
                                </button>

                                <!-- Open Note Modal Button -->
                                <button type="button" class="btn btn-warning btn-sm mt-2" data-bs-toggle="modal" data-bs-target="#noteModal-@item.FeedbackComplaintId">
                                    Add Note
                                </button>
                            </div>
                        </div>

                        <!-- Reply Modal -->
                        <div class="modal fade" id="replyModal-@item.FeedbackComplaintId" tabindex="-1" aria-labelledby="replyModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title">Admin Reply</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <form asp-action="ReplyToComplaint" asp-controller="FeedbackComplaint" method="post">
                                            <input type="hidden" name="id" value="@item.FeedbackComplaintId" />
                                            <div class="form-group">
                                                <label class="fw-bold">Admin Reply:</label>
                                                <textarea class="form-control" name="replyMessage" required>@item.AdminReply</textarea>
                                            </div>
                                            <button type="submit" class="btn btn-success mt-2">Send Reply</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Note Modal -->
                        <div class="modal fade" id="noteModal-@item.FeedbackComplaintId" tabindex="-1" aria-labelledby="noteModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title">Admin Note</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <form asp-action="ComplaintAddNote" asp-controller="FeedbackComplaint" method="post">
                                            <input type="hidden" name="id" value="@item.FeedbackComplaintId" />
                                            <div class="form-group">
                                                <label class="fw-bold">Admin Note:</label>
                                                <textarea class="form-control" name="note">@item.AdminNote</textarea>
                                            </div>
                                            <button type="submit" class="btn btn-warning mt-2">Add Note</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    @if (!Model.Any(f => f.Status.StatusName == status && f.Type == "Feedback"))
                    {
                        <p class="text-muted">No @status feedback available.</p>
                    }
                </div>
            }
        </div>
    </div>
</div>

<!-- Script to switch to the updated tab -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let statusForms = document.querySelectorAll(".status-form");
        statusForms.forEach(form => {
            form.addEventListener("submit", function (event) {
                event.preventDefault();
                let selectedStatus = this.querySelector(".status-dropdown").value;
                let tabId = selectedStatus.toLowerCase().replace(" ", "");
                if (selectedStatus === "In Progress") tabId = "onprogress";
                if (selectedStatus === "Closed") tabId = "canceled";

                // Set active tab
                document.querySelector('.nav-link.active').classList.remove('active');
                document.querySelector(`#${tabId}-tab`).classList.add('active');

                // Show corresponding tab content
                document.querySelector('.tab-pane.show.active').classList.remove('show', 'active');
                document.querySelector(`#${tabId}`).classList.add('show', 'active');

                // Submit form
                form.submit();
            });
        });
    });
</script>
