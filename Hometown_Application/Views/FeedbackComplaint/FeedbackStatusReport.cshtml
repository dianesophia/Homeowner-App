@model IEnumerable<Hometown_Application.Models.FeedbackComplaintModel>

@{
    ViewData["Title"] = "Feedback";
    var statuses = new List<string> { "Pending", "In Progress", "Resolved", "Closed" };
}

<h2>Feedback</h2>

<!-- Bootstrap 5 Tabs -->
<ul class="nav nav-tabs" id="feedbackStatusTabs" role="tablist">
    @foreach (var status in statuses)
    {
        <li class="nav-item" role="presentation">
            <button class="nav-link @(status == "Pending" ? "active" : "")"
                    id="tab-@status.Replace(" ", "")"
                    data-bs-toggle="tab"
                    data-bs-target="#feedback-@status.Replace(" ", "")"
                    type="button"
                    role="tab"
                    aria-controls="feedback-@status.Replace(" ", "")"
                    aria-selected="@(status == "Pending" ? "true" : "false")">
                @status
            </button>
        </li>
    }
</ul>

<!-- Tab Content -->
<div class="tab-content mt-3" id="feedbackTabContent">
    @foreach (var status in statuses)
    {
        var feedbackByStatus = Model.Where(item => item.Status.StatusName == status && item.Type == "Feedback").ToList();

        <div class="tab-pane fade @(status == "Pending" ? "show active" : "")"
             id="feedback-@status.Replace(" ", "")"
             role="tabpanel"
             aria-labelledby="tab-@status.Replace(" ", "")">

            @if (feedbackByStatus.Any())
            {
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Message</th>
                            <th>Reply</th>
                            <th>Status</th>
                            <th>Submitted On</th>
                            <th>Image</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in feedbackByStatus)
                        {
                            <tr>
                                <td>@item.Title</td>
                                <td>@item.Message</td>
                                <td>@(string.IsNullOrEmpty(item.AdminReply) ? "No Reply" : item.AdminReply)</td>
                                <td>@item.Status?.StatusName</td>
                                <td>@item.AddedOn.ToString("MM/dd/yyyy")</td>
                                <td>
                                    @if (item.Image != null)
                                    {
                                        <img src="data:image/jpeg;base64,@Convert.ToBase64String(item.Image)" alt="Feedback Image" width="100" height="100" />
                                    }
                                    else
                                    {
                                        <span>No Image</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p class="text-muted">No feedback available for @status.</p>
            }
        </div>
    }
</div>

<!-- Bootstrap 5 & JavaScript (Ensure Tabs Work) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var triggerTabList = [].slice.call(document.querySelectorAll('#feedbackStatusTabs button'))
        triggerTabList.forEach(function (triggerEl) {
            var tabTrigger = new bootstrap.Tab(triggerEl)
            triggerEl.addEventListener('click', function (event) {
                event.preventDefault()
                tabTrigger.show()
            })
        })
    });
</script>
