@using Hometown_Application.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
}
<style>
    :root {
        --primary-color: #6F754E;
        --primary-light: #8a916a;
        --primary-dark: #5a604e;
        --secondary-color: #A08D67;
        --background-color: #E6DDC4;
        --text-color: #2F3A31;
        --white: #FFFFFF;
        --border-radius: 16px;
        --shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        --transition: all 0.3s ease-in-out;
    }

    .navbar {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        background-color: var(--primary-color);
        box-shadow: var(--shadow);
        z-index: 1000;
        min-height: 100px;
        padding: 15px 20px;
        font-family: 'Marcellus', serif;
    }

    .navbar-brand {
        font-size: 1.2rem;
        font-weight: normal;
        color: white;
    }

        .navbar-brand:hover {
            transform: scale(1.05);
        }

    .navbar-nav .nav-link {
        color: white;
        font-weight: 500;
        margin: 0 10px;
        padding: 8px 16px;
        border-radius: var(--border-radius);
        transition: var(--transition);
    }

        .navbar-nav .nav-link:hover {
            background: var(--primary-light);
            color: white;
            transform: translateY(-2px);
        }

    .user-info {
        background: var(--primary-light);
        padding: 8px 16px;
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        gap: 8px;
        backdrop-filter: blur(5px);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

        .user-info i {
            font-size: 1.2rem;
        }

    .content {
        flex: 1;
    }

    body {
        background-color: var(--background-color);
        color: var(--text-color);
        font-family: 'Marcellus', serif;
        padding-top: 80px;
    }

    .complaints-container {
        background-color: var(--white);
        border-radius: var(--border-radius);
        box-shadow: 0 10px 30px rgba(111, 117, 78, 0.2);
        padding: 40px;
        max-width: 1000px;
        margin: 0 auto;
        position: relative;
        overflow: hidden;
        margin-top: 50px;
        margin-bottom: 150px;
    }

        .complaints-container::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: repeating-linear-gradient( 45deg, rgba(111, 117, 78, 0.02) 0, rgba(111, 117, 78, 0.02) 10px, transparent 10px, transparent 20px );
            z-index: 1;
            opacity: 0.3;
            pointer-events: none;
        }

    .page-header {
        text-align: center;
        margin-bottom: 40px;
        position: relative;
    }

        .page-header h1 {
            color: var(--primary-color);
            font-weight: 700;
            font-size: 2.5rem;
            position: relative;
            display: inline-block;
        }

            .page-header h1::after {
                content: '';
                position: absolute;
                bottom: -10px;
                left: 0;
                width: 100%;
                height: 4px;
                background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
                transform: scaleX(0);
                transform-origin: right;
                transition: transform 0.5s ease;
            }

            .page-header h1:hover::after {
                transform: scaleX(1);
                transform-origin: left;
            }

    .btn-back {
        background: linear-gradient(135deg, var(--secondary-color), #8a7d5a);
        color: var(--white);
        border: none;
        padding: 10px 20px;
        border-radius: 50px;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 10px;
        font-weight: 600;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: var(--transition);
    }

        .btn-back:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
            background: linear-gradient(135deg, #8a7d5a, var(--secondary-color));
        }

        .btn-back i {
            margin-right: 8px;
        }

    .btn-secondary, .btn-primary {
        border-radius: 50px;
        text-transform: uppercase;
        letter-spacing: 1px;
        transition: var(--transition);
        margin-bottom: 20px;
    }

    .btn-secondary {
        background: linear-gradient(135deg, var(--secondary-color), #8a7d5a);
        border: none;
        color: var(--white);
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        border: none;
    }

    .form-control, .form-select {
        border-radius: var(--border-radius);
        padding: 12px 15px;
        margin-bottom: 15px;
        border: 1px solid var(--primary-light);
        transition: var(--transition);
    }

        .form-control:focus, .form-select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(111, 117, 78, 0.25);
        }

    .btn-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 25px;
        position: relative;
        z-index: 2;
    }

    .btn-secondary {
        position: relative;
        padding: 15px 30px;
        border: none;
        border-radius: 50px;
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        color: var(--white);
        text-transform: uppercase;
        letter-spacing: 1.5px;
        font-weight: 600;
        font-size: 1rem;
        box-shadow: 0 10px 20px rgba(111, 117, 78, 0.3);
        overflow: hidden;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

        .btn-secondary::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(120deg, transparent, rgba(255,255,255,0.3), transparent);
            transition: all 0.6s ease;
        }

        .btn-secondary:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 25px rgba(111, 117, 78, 0.4);
        }

            .btn-secondary:hover::before {
                left: 100%;
            }

        .btn-secondary i {
            font-size: 1.2rem;
            margin-right: 8px;
        }

    .btn-secondary {
        width: 100%;
        max-width: 300px;
    }
</style>
<nav class="navbar navbar-expand-lg">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">
            <i class="fas fa-home me-2"></i>
            Golden Haven
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-auto">
                @if (SignInManager.IsSignedIn(User))
                {
                    if (user != null)
                    {
                        <div class="nav-item">
                            <a class="nav-link" asp-controller="Dashboard" asp-action="Index">
                                <i class="fas fa-user"></i>
                                <span>@user.FirstName @user.LastName</span>
                            </a>
                        </div>
                    }
                }
                @if (SignInManager.IsSignedIn(User))
                {
                    if (User.IsInRole("Admin"))
                    {
                        <li class="nav-item"><a class="nav-link" asp-controller="ManageUsers" asp-action="Index"><i class="fas fa-users-cog me-2"></i>Management Users</a></li>
                    }
                }
                <li class="nav-item"><a class="nav-link" asp-controller="Contact" asp-action="Index"><i class="fas fa-calendar me-2"></i>Contact</a></li>
                <li class="nav-item"><a class="nav-link" asp-controller="Event" asp-action="Index"><i class="fas fa-address-book me-2"></i>Calendar</a></li>
                <li class="nav-item"><a class="nav-link" asp-controller="Document" asp-action="Index"><i class="fas fa-file-alt me-2"></i>Document</a></li>
                <!--<li class="nav-item"><a class="nav-link" asp-controller="Document" asp-action="FileDownload"><i class="fas fa-download me-2"></i>Download</a></li>-->
                <li class="nav-item">
                    <div class="user-info @(ViewContext.RouteData.Values["Controller"]?.ToString() == "FeedbackComplaint" ? "active-tab" : "")">
                        <i class="fas fa-exclamation-circle me-2"></i>
                        <span>Issues</span>
                    </div>
                </li>
                <li class="nav-item"><a class="nav-link" asp-controller="Home" asp-action="Index"><i class="fas fa-sign-out-alt me-2"></i>Logout</a></li>
            </ul>
        </div>
    </div>
</nav>
<div class="complaints-container">
    <div class="back-button-container">
        <a href="@Url.Action("Index", "FeedbackComplaint")" class="btn-back">
            <i class="fas fa-arrow-left"></i>Back
        </a>
    </div>
    <div class="page-header">
        <h1>Complaint</h1>
    </div>
    <a asp-controller="FeedbackComplaint" asp-action="ComplaintStatusReport" class="btn btn-secondary">Complaint Status Report</a>


    <form id="ComplaintForm" asp-action="ComplaintForm" asp-controller="FeedbackComplaint" enctype="multipart/form-data" onsubmit="return validateForm()">
        <input hidden class="form-control" type="number" name="FeedbackComplaintId" />
        <input type="hidden" name="UserId" value="@user?.Id" />
        <input hidden class="form-control" value="Feedback" />

        <input class="form-control" type="text" placeholder="Title" name="Title" required />

        <select id="SubjectSelect" name="Subject" class="form-select" onchange="toggleOtherInput()" required>
            <option value="" selected disabled>Choose a subject</option>
            <option value="Maintenance">Maintenance</option>
            <option value="Security">Security</option>
            <option value="Noise">Noise</option>
            <option value="Other">Other</option>
        </select>

        <input id="OtherSubjectInput" class="form-control mt-2" type="text" name="OtherSubject" placeholder="Please specify" style="display:none;" />

        <textarea class="form-control" placeholder="Comment" name="Message" required></textarea>

        <input class="form-control" type="file" name="Image" id="ImageUpload" accept="image/*" />

        <button class="btn btn-primary mt-4" type="submit">Submit Feedback</button>
    </form>

</div>
<script>
    function toggleOtherInput() {
        var select = document.getElementById('SubjectSelect');
        var input = document.getElementById('OtherSubjectInput');

        if (select.value === "Other") {
            input.style.display = "block";
            input.setAttribute("required", "true");
        } else {
            input.style.display = "none";
            input.removeAttribute("required");
        }
    }

    function validateForm() {
        var title = document.querySelector('input[name="Title"]').value.trim();
        var subject = document.getElementById('SubjectSelect').value;
        var otherSubject = document.getElementById('OtherSubjectInput').value.trim();
        var message = document.querySelector('textarea[name="Message"]').value.trim();
        var fileInput = document.getElementById("ImageUpload");
        var allowedExtensions = ["jpg", "jpeg", "png", "gif"];


        if (title === "" || subject === "" || message === "") {
            alert("Please fill out all required fields.");
            return false;
        }

        if (subject === "Other" && otherSubject === "") {
            alert("Please specify the subject.");
            return false;
        }


        if (fileInput.files.length > 0) {
            var fileName = fileInput.files[0].name;
            var fileExtension = fileName.split('.').pop().toLowerCase();

            if (!allowedExtensions.includes(fileExtension)) {
                alert("Invalid file type! Please upload an image (JPG, JPEG, PNG, GIF).");
                return false;
            }
        }

        return true;
    }
</script>
