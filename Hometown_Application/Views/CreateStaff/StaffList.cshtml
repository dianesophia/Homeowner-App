@model List<Hometown_Application.Models.StaffProfileModel>

@{
    var departments = Enum.GetValues(typeof(Hometown_Application.Models.StaffDepartment))
                          .Cast<Hometown_Application.Models.StaffDepartment>()
                          .OrderBy(d => d.ToString())
                          .ToList();
}

<!-- Tabs Navigation -->
<ul class="nav nav-tabs pt-5 small" id="departmentTabs" role="tablist">
    @foreach (var department in departments)
    {
        var departmentId = department.ToString().Replace(" ", "");
        <li class="nav-item" role="presentation">
            <button class="nav-link small @(department == departments.First() ? "active" : "")"
                    id="@departmentId-tab"
                    data-bs-toggle="tab"
                    data-bs-target="#@departmentId"
                    type="button"
                    role="tab">
                @department.ToString().Replace("Management", " Mgmt.")
            </button>
        </li>
    }
</ul>

<!-- Tab Content -->
<div class="tab-content pt-3 small" id="departmentTabsContent">
    @foreach (var department in departments)
    {
        var departmentId = department.ToString().Replace(" ", "");
        <div class="tab-pane fade @(department == departments.First() ? "show active" : "")"
             id="@departmentId"
             role="tabpanel">

            @if (Model.Any(s => s.Department == department))
            {
                <table class="table table-sm table-striped">
                    <thead class="table-dark">
                        <tr>
                            <th class="text-center small">Name</th>
                            <th class="text-center small">Position</th>
                            <th class="text-center small">Hire Date</th>
                            <th class="text-center small">Salary</th>
                            <th class="text-center small">Actions</th> <!-- Added Actions Column -->
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var staff in Model.Where(s => s.Department == department))
                        {
                            var modalId = $"staffModal{staff.UserId}"; // Unique Modal ID

                            <tr>
                                <td class="text-center small">@staff.FirstName @staff.LastName</td>
                                <td class="text-center small">@staff.Position</td>
                                <td class="text-center small">@(staff.HireDate?.ToString("yyyy-MM-dd") ?? "N/A")</td>
                                <td class="text-center small">$@staff.Salary</td>
                                <td class="text-center small">
                                    <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#@modalId">
                                        View Details
                                    </button>
                                </td>
                            </tr>

                            <!-- Bootstrap Modal -->
                            <div class="modal fade" id="@modalId" tabindex="-1" aria-labelledby="modalLabel@modalId" aria-hidden="true">
                                <div class="modal-dialog modal-lg">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="modalLabel@modalId">Staff Details - @staff.FirstName @staff.LastName</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <img id="staffProfilePic" src="" alt="Profile Picture" style="width:100px; height:100px; border-radius:50%;">
                                            <h5>@staff.FirstName @staff.LastName</h5>
                                            <p><strong>Position:</strong> @staff.Position</p>
                                            <p><strong>Hire Date:</strong> @(staff.HireDate?.ToString("yyyy-MM-dd") ?? "N/A")</p>
                                            <p><strong>Salary:</strong> $@staff.Salary</p>
                                            <p><strong>Department:</strong> @staff.Department</p>
                                            <p><strong>Emergency Contact:</strong> @staff.EmergencyContactName (@staff.EmergencyContactRelation) - @staff.EmergencyContactNumber</p>

                                            <!-- Salary Adjustment -->
                                            <div class="mb-3">
                                                <label for="salaryInput@modalId" class="form-label">New Salary</label>
                                                <input type="number" class="form-control" id="salaryInput@modalId" placeholder="Enter new salary">
                                            </div>

                                            <!-- Fire Staff Button -->
                                            <button class="btn btn-danger" onclick="fireStaff('@staff.UserId')">Fire Staff</button>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                            <button type="button" class="btn btn-success" onclick="increaseSalary('@staff.UserId', 'salaryInput@modalId')">Update Salary</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </tbody>
                </table>


            }
            else
            {
                <p class="text-muted text-center small">No staff members in this department.</p>
            }
        </div>
    }
</div>

<script>
    async function increaseSalary(userId, inputId) {
        let salaryInput = document.getElementById(inputId);
        let newSalary = salaryInput.value.trim();

        if (!newSalary || isNaN(newSalary) || parseFloat(newSalary) <= 0) {
            alert("Please enter a valid salary amount.");
            return;
        }

        let button = event.target;
        button.disabled = true;

        try {
            let response = await fetch('/CreateStaff/IncreaseSalary', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    userId: userId,
                    newSalary: parseFloat(newSalary)
                })
            });

            if (!response.ok) throw new Error("Failed to update salary.");

            alert("Salary updated successfully.");
            location.reload();
        } catch (error) {
            alert(error.message);
        } finally {
            button.disabled = false;
        }
    }

    async function fireStaff(userId) {
        if (!confirm("Are you sure you want to fire this staff member?")) return;

        let button = event.target;
        button.disabled = true;

        try {
            let response = await fetch('/CreateStaff/FireStaff', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ userId: userId })
            });

            if (!response.ok) throw new Error("Failed to fire staff member.");

            alert("Staff member has been fired.");
            location.reload();
        } catch (error) {
            alert(error.message);
        } finally {
            button.disabled = false;
        }
    }


</script>