@model List<Hometown_Application.Models.StaffProfileModel>

@{
    var departments = Enum.GetValues(typeof(Hometown_Application.Models.StaffDepartment))
                          .Cast<Hometown_Application.Models.StaffDepartment>()
                          .OrderBy(d => d.ToString())
                          .ToList();
}

<style>
    :root {
        --primary-color: #6F754E;
        --primary-light: #8a916a;
        --primary-dark: #5a6040;
        --secondary-color: #A08D67;
        --secondary-light: #b8a787;
        --background-color: #E6DDC4;
        --text-color: #2F3A31;
        --card-bg: #FFFFFF;
        --danger-color: #dc3545;
        --success-color: #198754;
        --warning-color: #ffc107;
        --info-color: #0dcaf0;
        --border-radius: 16px;
        --shadow: 0px 6px 12px rgba(0, 0, 0, 0.1);
        --transition: all 0.3s ease;
    }

    .navbar {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        background-color: var(--primary-color);
        box-shadow: var(--shadow);
        z-index: 1000;
        min-height: 100px;
        padding: 15px 20px;
        font-family: 'Marcellus', serif;
    }

    .navbar-brand {
        font-size: 1.2rem;
        font-weight: normal;
        color: white;
    }

        .navbar-brand:hover {
            transform: scale(1.05);
        }

    .navbar-nav .nav-link {
        color: white;
        font-weight: 500;
        margin: 0 10px;
        padding: 8px 16px;
        border-radius: var(--border-radius);
        transition: var(--transition);
    }

        .navbar-nav .nav-link:hover {
            background: var(--primary-light);
            color: white;
            transform: translateY(-2px);
        }

    .user-info {
        background: var(--primary-light);
        padding: 8px 16px;
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        gap: 8px;
        backdrop-filter: blur(5px);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

        .user-info i {
            font-size: 1.2rem;
        }

    .page-title {
        font-size: 2.2rem;
        color: var(--text-color);
        margin-bottom: 1.5rem;
        font-weight: 600;
        position: relative;
        padding-bottom: 8px;
    }

        .page-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 80px;
            height: 3px;
            background-color: var(--primary-color);
            border-radius: 3px;
        }


    .staff-container {
        width: 100%;
        margin: 2rem auto;
        background-color: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        padding: 25px;
    }


    .nav-tabs {
        border-bottom: 1px solid var(--primary-light);
        margin-bottom: 20px;
    }

        .nav-tabs .nav-item {
            margin-bottom: -1px;
        }

        .nav-tabs .nav-link {
            color: var(--text-color);
            border: 1px solid transparent;
            border-top-left-radius: 8px;
            border-top-right-radius: 8px;
            padding: 0.75rem 1.25rem;
            transition: var(--transition);
        }

            .nav-tabs .nav-link:hover {
                border-color: var(--primary-light);
                background-color: rgba(111, 117, 78, 0.1);
            }

            .nav-tabs .nav-link.active {
                color: var(--primary-dark);
                background-color: white;
                border-color: var(--primary-light) var(--primary-light) transparent;
                font-weight: 600;
            }

    .tab-content {
        padding: 20px 0;
    }

    .table {
        width: 100%;
        margin-bottom: 1rem;
        color: var(--text-color);
        border-collapse: separate;
        border-spacing: 0;
        border-radius: 8px;
        overflow: hidden;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: rgba(111, 117, 78, 0.05);
    }

    .table thead th {
        vertical-align: middle;
        padding: 0.75rem;
        border-bottom: 2px solid var(--primary-light);
        background-color: var(--primary-color);
        color: white;
        font-weight: 500;
    }

    .table tbody td {
        padding: 0.75rem;
        vertical-align: middle;
        border-top: 1px solid #dee2e6;
    }

    .btn {
        font-weight: 500;
        border-radius: var(--button-radius);
        padding: 8px 16px;
        transition: var(--transition);
        cursor: pointer;
    }

    .btn-sm {
        padding: 6px 12px;
        font-size: 0.875rem;
    }

    .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        color: white;
    }

        .btn-primary:hover {
            background-color: var(--primary-dark);
            border-color: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
        color: white;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
            border-color: #545b62;
        }

    .btn-success {
        background-color: var(--success-color);
        border-color: var(--success-color);
        color: white;
    }

        .btn-success:hover {
            background-color: #157347;
            border-color: #146c43;
        }

    .btn-danger {
        background-color: var(--danger-color);
        border-color: var(--danger-color);
        color: white;
    }

        .btn-danger:hover {
            background-color: #bb2d3b;
            border-color: #b02a37;
        }

    .modal-content {
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
    }

    .modal-header {
        border-bottom: 1px solid var(--primary-light);
        background-color: var(--primary-light);
        color: white;
        border-top-left-radius: var(--border-radius);
        border-top-right-radius: var(--border-radius);
    }

    .modal-footer {
        border-top: 1px solid #dee2e6;
    }

    .form-control {
        display: block;
        width: 100%;
        padding: 0.75rem 1rem;
        font-size: 1rem;
        border: 1px solid #ced4da;
        border-radius: 8px;
        transition: var(--transition);
    }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.25rem rgba(111, 117, 78, 0.25);
        }

    .form-label {
        font-weight: 500;
        margin-bottom: 0.5rem;
        display: block;
    }

    .text-muted {
        color: #6c757d;
    }

    .profile-image {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        object-fit: cover;
        border: 3px solid var(--primary-light);
        margin-bottom: 15px;
    }

    .staff-details {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

        .staff-details p {
            margin-bottom: 0.5rem;
        }

    .staff-modal-body {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        padding: 20px;
    }

    .staff-info {
        width: 100%;
        margin-top: 15px;
    }

    .salary-section {
        margin-top: 20px;
        padding-top: 20px;
        border-top: 1px solid #dee2e6;
        width: 100%;
    }

    .action-section {
        margin-top: 20px;
        width: 100%;
    }
</style>
<div class="content">
    <div class="page-header">
        <div>
            <h1 class="page-title">Staff Directory</h1>
        </div>
    </div>
    <div class="staff-container">
    <!-- Tabs Navigation -->
    <ul class="nav nav-tabs" id="departmentTabs" role="tablist">
        @foreach (var department in departments)
        {
            var departmentId = department.ToString().Replace(" ", "");
            <li class="nav-item" role="presentation">
                <button class="nav-link @(department == departments.First() ? "active" : "")"
                        id="@departmentId-tab"
                        data-bs-toggle="tab"
                        data-bs-target="#@departmentId"
                        type="button"
                        role="tab">
                    @department.ToString().Replace("Management", " Mgmt.")
                </button>
            </li>
        }
    </ul>

    <!-- Tab Content -->
    <div class="tab-content" id="departmentTabsContent">
        @foreach (var department in departments)
        {
            var departmentId = department.ToString().Replace(" ", "");
            <div class="tab-pane fade @(department == departments.First() ? "show active" : "")"
                 id="@departmentId"
                 role="tabpanel">

                @if (Model.Any(s => s.Department == department))
                {
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th class="text-center">Name</th>
                                <th class="text-center">Position</th>
                                <th class="text-center">Hire Date</th>
                                <th class="text-center">Salary</th>
                                <th class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var staff in Model.Where(s => s.Department == department))
                            {
                                var modalId = $"staffModal{staff.UserId}"; // Unique Modal ID

                                <tr>
                                    <td class="text-center">@staff.FirstName @staff.LastName</td>
                                    <td class="text-center">@staff.Position</td>
                                    <td class="text-center">@(staff.HireDate?.ToString("yyyy-MM-dd") ?? "N/A")</td>
                                    <td class="text-center">$@staff.Salary</td>
                                    <td class="text-center">
                                        <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#@modalId">
                                            View Details
                                        </button>
                                    </td>
                                </tr>

                                <!-- Bootstrap Modal -->
                                <div class="modal fade" id="@modalId" tabindex="-1" aria-labelledby="modalLabel@modalId" aria-hidden="true">
                                    <div class="modal-dialog modal-lg">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="modalLabel@modalId">Staff Details - @staff.FirstName @staff.LastName</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body staff-modal-body">
                                                <img id="staffProfilePic" src="" alt="Profile Picture" class="profile-image">

                                                <div class="staff-info">
                                                    <h4>@staff.FirstName @staff.LastName</h4>
                                                    <div class="staff-details">
                                                        <p><strong>Position:</strong> @staff.Position</p>
                                                        <p><strong>Hire Date:</strong> @(staff.HireDate?.ToString("yyyy-MM-dd") ?? "N/A")</p>
                                                        <p><strong>Salary:</strong> $@staff.Salary</p>
                                                        <p><strong>Department:</strong> @staff.Department</p>
                                                        <p><strong>Emergency Contact:</strong> @staff.EmergencyContactName (@staff.EmergencyContactRelation) - @staff.EmergencyContactNumber</p>
                                                    </div>
                                                </div>

                                                <div class="salary-section">
                                                    <h5>Adjust Salary</h5>
                                                    <div class="mb-3">
                                                        <label for="salaryInput@modalId" class="form-label">New Salary</label>
                                                        <input type="number" class="form-control" id="salaryInput@modalId" placeholder="Enter new salary">
                                                    </div>
                                                </div>

                                                <div class="action-section">
                                                    <button class="btn btn-danger" onclick="fireStaff('@staff.UserId')">Fire Staff</button>
                                                </div>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                <button type="button" class="btn btn-success" onclick="increaseSalary('@staff.UserId', 'salaryInput@modalId')">Update Salary</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p class="text-muted text-center">No staff members in this department.</p>
                }
            </div>
        }
    </div>
</div>
</div>

<script>
    async function increaseSalary(userId, inputId) {
        let salaryInput = document.getElementById(inputId);
        let newSalary = salaryInput.value.trim();

        if (!newSalary || isNaN(newSalary) || parseFloat(newSalary) <= 0) {
            alert("Please enter a valid salary amount.");
            return;
        }

        let button = event.target;
        button.disabled = true;

        try {
            let response = await fetch('/CreateStaff/IncreaseSalary', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    userId: userId,
                    newSalary: parseFloat(newSalary)
                })
            });

            if (!response.ok) throw new Error("Failed to update salary.");

            alert("Salary updated successfully.");
            location.reload();
        } catch (error) {
            alert(error.message);
        } finally {
            button.disabled = false;
        }
    }

    async function fireStaff(userId) {
        if (!confirm("Are you sure you want to fire this staff member?")) return;

        let button = event.target;
        button.disabled = true;

        try {
            let response = await fetch('/CreateStaff/FireStaff', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ userId: userId })
            });

            if (!response.ok) throw new Error("Failed to fire staff member.");

            alert("Staff member has been fired.");
            location.reload();
        } catch (error) {
            alert(error.message);
        } finally {
            button.disabled = false;
        }
    }
</script>