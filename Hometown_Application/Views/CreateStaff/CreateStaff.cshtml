@model Hometown_Application.ViewModel.CreateStaffViewModel

@{
    ViewData["Title"] = "Create Staff Profile";
}

<a asp-controller="CreateStaff" asp-action="StaffList" class="btn btn-secondary">Staff List</a>

<h2>@ViewData["Title"]</h2>

<form asp-action="CreateStaff" method="post" enctype="multipart/form-data">
    <!-- Profile Picture Upload with Cropping -->
    <div class="form-group">
        <label class="control-label">Profile Picture</label>
        <input type="file" id="profilePictureInput" class="form-control" accept="image/*" />
        <div class="mt-2">
            <img id="profilePicturePreview" style="max-width: 100%; max-height: 200px; display: none;" />
        </div>
        <canvas id="croppedCanvas" style="display: none;"></canvas>
        <input type="hidden" asp-for="ProfilePicture" id="profilePictureData" />
    </div>

    <div class="form-group">
        <label asp-for="FirstName" class="control-label">First Name</label>
        <input asp-for="FirstName" class="form-control" required />
        <span asp-validation-for="FirstName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="LastName" class="control-label">Last Name</label>
        <input asp-for="LastName" class="form-control" required />
        <span asp-validation-for="LastName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Email" class="control-label">Email</label>
        <input asp-for="Email" class="form-control" required />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Position" class="control-label">Position</label>
        <input asp-for="Position" class="form-control" required />
    </div>

    <div class="form-group">
        <label asp-for="Department" class="control-label">Department</label>
        <select asp-for="Department" class="form-control" asp-items="Html.GetEnumSelectList<Hometown_Application.Models.StaffDepartment>()">
            <option value="">-- Select Department --</option>
        </select>
        <span asp-validation-for="Department" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="HireDate" class="control-label">Hire Date</label>
        <input asp-for="HireDate" type="date" class="form-control" required />
    </div>

    <div class="form-group">
        <label asp-for="Salary" class="control-label">Salary</label>
        <input asp-for="Salary" type="number" class="form-control" required />
    </div>

    <div class="form-group">
        <label asp-for="EmergencyContactName" class="control-label">Emergency Contact Name</label>
        <input asp-for="EmergencyContactName" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="EmergencyContactNumber" class="control-label">Emergency Contact Number</label>
        <input asp-for="EmergencyContactNumber" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="EmergencyContactRelation" class="control-label">Relationship</label>
        <input asp-for="EmergencyContactRelation" class="form-control" />
    </div>

    <div class="form-check">
        <input asp-for="IsActiveEmployee" class="form-check-input" type="checkbox" />
        <label asp-for="IsActiveEmployee" class="form-check-label">Active Employee</label>
    </div>

    <div class="form-check">
        <input asp-for="IsAlsoHomeOwner" class="form-check-input" type="checkbox" />
        <label asp-for="IsAlsoHomeOwner" class="form-check-label">Also a Homeowner</label>
    </div>

    <button type="submit" class="btn btn-primary">Create Staff</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }


    <script>
        let cropper;
        let profilePictureInput = document.getElementById('profilePictureInput');
        let profilePicturePreview = document.getElementById('profilePicturePreview');
        let profilePictureData = document.getElementById('profilePictureData');
        let croppedCanvas = document.getElementById('croppedCanvas');

        profilePictureInput.addEventListener('change', function (event) {
            let file = event.target.files[0];

            if (file) {
                let reader = new FileReader();
                reader.onload = function (e) {
                    profilePicturePreview.src = e.target.result;
                    profilePicturePreview.style.display = 'block';

                    // Destroy existing cropper if exists
                    if (cropper) {
                        cropper.destroy();
                    }

                    // Initialize Cropper.js
                    cropper = new Cropper(profilePicturePreview, {
                        aspectRatio: 1,
                        viewMode: 1,
                        autoCropArea: 1,
                        zoomable: false,
                        crop(event) {
                            let canvas = cropper.getCroppedCanvas({
                                width: 200,
                                height: 200
                            });

                            if (canvas) {
                                croppedCanvas.getContext('2d').clearRect(0, 0, croppedCanvas.width, croppedCanvas.height);
                                croppedCanvas.width = canvas.width;
                                croppedCanvas.height = canvas.height;
                                croppedCanvas.getContext('2d').drawImage(canvas, 0, 0);
                                profilePictureData.value = croppedCanvas.toDataURL('image/png');
                            }
                        }
                    });
                };
                reader.readAsDataURL(file);
            }
        });
    </script>
}
