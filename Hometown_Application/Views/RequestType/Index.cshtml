
@model IEnumerable<Hometown_Application.Models.RequestTypeModel>
@using Microsoft.AspNetCore.Identity
@using Hometown_Application.Areas.Identity.Data
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Request Types";
}

<style>
    :root {
        --primary-color: #6F754E;
        --primary-light: #8a916a;
        --primary-dark: #5a6040;
        --secondary-color: #A08D67;
        --secondary-light: #b8a787;
        --background-color: #E6DDC4;
        --text-color: #2F3A31;
        --card-bg: #FFFFFF;
        --danger-color: #dc3545;
        --success-color: #198754;
        --warning-color: #ffc107;
        --info-color: #0dcaf0;
        --border-radius: 16px;
        --shadow: 0px 6px 12px rgba(0, 0, 0, 0.1);
        --transition: all 0.3s ease;
    }

    .page-title {
        font-size: 2.2rem;
        color: var(--text-color);
        margin-bottom: 1.5rem;
        font-weight: 600;
        position: relative;
        padding-bottom: 8px;
    }

        .page-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 80px;
            height: 3px;
            background-color: var(--primary-color);
            border-radius: 3px;
        }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        flex-wrap: wrap;
        gap: 20px;
        margin-top: auto;
    }

    .page-subtitle {
        color: var(--secondary-color);
        font-size: 1.1rem;
    }

    .create-btn {
        background-color: var(--primary-color);
        color: white;
        border-radius: var(--border-radius);
        padding: 8px 16px;
        transition: var(--transition);
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        border: none;
    }

        .create-btn:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
            color: white;
        }

    .section-header {
        font-size: 1.8rem;
        color: var(--text-color);
        margin-bottom: 20px;
        position: relative;
        padding-bottom: 8px;
    }

        .section-header::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 60px;
            height: 3px;
            background-color: var(--primary-color);
            border-radius: 3px;
        }

    .request-card {
        background-color: var(--card-bg);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        transition: var(--transition);
        border: 1px solid rgba(0, 0, 0, 0.03);
        height: 100%;
        overflow: hidden;
    }

        .request-card:hover {
            transform: translateY(-6px);
            box-shadow: 0 12px 20px rgba(0, 0, 0, 0.1);
        }

    .request-card-body {
        padding: 20px;
    }

    .request-card-title {
        font-size: 1.2rem;
        color: var(--text-color);
        margin-bottom: 10px;
        font-weight: 600;
    }

    .request-card-info {
        font-size: 0.9rem;
        color: #666;
        margin-bottom: 10px;
    }

    .request-card-description {
        color: #666;
        margin-bottom: 15px;
    }

    .status-badge {
        display: inline-block;
        padding: 4px 12px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
        margin-bottom: 15px;
    }

    .status-active {
        background-color: rgba(25, 135, 84, 0.15);
        color: var(--success-color);
    }

    .status-inactive {
        background-color: rgba(220, 53, 69, 0.15);
        color: var(--danger-color);
    }

    .request-card-footer {
        padding: 15px 20px;
        background-color: rgba(0, 0, 0, 0.02);
        border-top: 1px solid rgba(0, 0, 0, 0.03);
        display: flex;
        justify-content: flex-end;
        gap: 10px;
    }

    .action-btn {
        border-radius: var(--border-radius);
        padding: 6px 12px;
        transition: var(--transition);
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 6px;
    }

    .edit-btn {
        background-color: transparent;
        color: var(--warning-color);
        border: 1px solid var(--warning-color);
    }

        .edit-btn:hover {
            background-color: var(--warning-color);
            color: white;
        }

    .delete-btn {
        background-color: transparent;
        color: var(--danger-color);
        border: 1px solid var(--danger-color);
    }

        .delete-btn:hover {
            background-color: var(--danger-color);
            color: white;
        }

    .search-container {
        background-color: var(--card-bg);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        padding: 20px;
        margin-bottom: 30px;
    }

    .search-input {
        border-radius: var(--border-radius) 0 0 var(--border-radius);
        border: 1px solid #ced4da;
        padding: 8px 16px;
        transition: var(--transition);
    }

        .search-input:focus {
            box-shadow: 0 0 0 0.25rem rgba(111, 117, 78, 0.25);
            border-color: var(--primary-light);
        }

    .search-btn {
        background-color: var(--primary-color);
        color: white;
        border-radius: 0 var(--border-radius) var(--border-radius) 0;
        border: 1px solid var(--primary-color);
        padding: 8px 16px;
        transition: var(--transition);
    }

        .search-btn:hover {
            background-color: var(--primary-dark);
        }

    .empty-state {
        background-color: var(--card-bg);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        padding: 25px;
        text-align: center;
        margin-bottom: 80px;
    }

    .empty-state-icon {
        font-size: 3rem;
        color: var(--secondary-color);
        margin-bottom: 15px;
    }

    .empty-state-title {
        font-size: 1.5rem;
        color: var(--text-color);
        margin-bottom: 10px;
    }

    .empty-state-message {
        color: #666;
        margin-bottom: 20px;
    }
</style>

<div class="container">
    <!-- Page Header -->
    <div class="page-header">
        <div>
            <h1 class="page-title">@ViewData["Title"]</h1>
            <p class="page-subtitle">Manage service request types available to citizens</p>
        </div>
        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
        {
            <div>
                <a asp-action="RequestTypeForm" class="create-btn" aria-label="Add a new request type">
                    <i class="fas fa-plus-circle"></i> Add New Request Type
                </a>
            </div>
        }
    </div>

    <!-- Search Container -->
    <div class="search-container">
        <form method="get" asp-action="Index" class="d-flex">
            <input type="text" name="searchQuery" class="form-control search-input" placeholder="Search by name..." value="@Context.Request.Query["searchQuery"]">
            <button type="submit" class="search-btn">
                <i class="fas fa-search"></i>
            </button>
        </form>
    </div>

    @if (Model.Any())
    {
        <!-- Active Request Types Section -->
        <div class="mb-5">
            <h2 class="section-header">Active Request Types</h2>
            <div class="row">
                @foreach (var item in Model.Where(r => r.IsActive))
                {
                    <div class="col-md-4 mb-4">
                        <div class="request-card">
                            <div class="request-card-body">
                                <h5 class="request-card-title">@item.Name</h5>
                                <div class="status-badge status-active">
                                    <i class="fas fa-check-circle"></i> Active
                                </div>
                                <p class="request-card-info">
                                    <i class="fas fa-building"></i> <strong>Department:</strong> @item.AssignedDepartment
                                </p>
                                <p class="request-card-description">
                                    @if (!string.IsNullOrEmpty(item.Description) && item.Description.Length > 100)
                                    {
                                        @(item.Description.Substring(0, 100) + "...")
                                    }
                                    else
                                    {
                                        @item.Description
                                    }
                                </p>
                            </div>
                            <div class="request-card-footer">
                                <a asp-action="RequestTypeForm" asp-route-id="@item.RequestTypeId" class="action-btn edit-btn" aria-label="Edit this request type">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.RequestTypeId" class="action-btn delete-btn" aria-label="Delete this request type" onclick="return confirm('Are you sure you want to delete this request type?');">
                                    <i class="fas fa-trash"></i> Delete
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Inactive Request Types Section -->
        @if (Model.Any(r => !r.IsActive))
        {
            <div class="mb-5">
                <h2 class="section-header">Inactive Request Types</h2>
                <div class="row">
                    @foreach (var item in Model.Where(r => !r.IsActive))
                    {
                        <div class="col-md-4 mb-4">
                            <div class="request-card">
                                <div class="request-card-body">
                                    <h5 class="request-card-title">@item.Name</h5>
                                    <div class="status-badge status-inactive">
                                        <i class="fas fa-times-circle"></i> Inactive
                                    </div>
                                    <p class="request-card-info">
                                        <i class="fas fa-building"></i> <strong>Department:</strong> @item.AssignedDepartment
                                    </p>
                                    <p class="request-card-description">
                                        @if (!string.IsNullOrEmpty(item.Description) && item.Description.Length > 100)
                                        {
                                            @(item.Description.Substring(0, 100) + "...")
                                        }
                                        else
                                        {
                                            @item.Description
                                        }
                                    </p>
                                </div>
                                <div class="request-card-footer">
                                    <a asp-action="RequestTypeForm" asp-route-id="@item.RequestTypeId" class="action-btn edit-btn" aria-label="Edit this request type">
                                        <i class="fas fa-edit"></i> Edit
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.RequestTypeId" class="action-btn delete-btn" aria-label="Delete this request type" onclick="return confirm('Are you sure you want to delete this request type?');">
                                        <i class="fas fa-trash"></i> Delete
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    }
    else
    {
        <!-- Empty State -->
        <div class="empty-state">
            <div class="empty-state-icon">
                <i class="fas fa-clipboard-list"></i>
            </div>
            <h4 class="empty-state-title">No request types available</h4>
            <p class="empty-state-message">There are currently no request types defined in the system.</p>
            @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
            {
                <hr>
                <p class="mb-0">Click the "Add New Request Type" button to create a new request type.</p>
                <a asp-action="RequestTypeForm" class="create-btn mt-3" aria-label="Add a new request type">
                    <i class="fas fa-plus-circle"></i> Add New Request Type
                </a>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize any JS components if needed
        });
    </script>
}