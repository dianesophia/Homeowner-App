@using Microsoft.AspNetCore.Identity
@using Hometown_Application.Areas.Identity.Data
@inject UserManager<ApplicationUser> UserManager

@model Hometown_Application.Models.FacilityModel

@{
    var user = await UserManager.GetUserAsync(User);
}

<h1>Facility Form</h1>

<form id="FacilityForm" asp-action="CreateOrEditFacility" asp-controller="Facility" enctype="multipart/form-data" onsubmit="return validateFacilityForm()">
    <input type="hidden" name="Id" value="@Model?.FacilityId" />
    <input type="hidden" name="AddedBy" value="@user?.Id" />

    <input class="form-control" type="text" placeholder="Facility Name" name="Name" value="@Model?.Name" required />

    <select id="FacilityTypeSelect" name="Type" class="form-select" onchange="toggleOtherInput()" required>
        <option value="" selected disabled>Choose Facility Type</option>
        <option value="Conference Room" selected="@(Model?.Type == "Conference Room" ? "selected" : null)">Conference Room</option>
        <option value="Sports Complex" selected="@(Model?.Type == "Sports Complex" ? "selected" : null)">Sports Complex</option>
        <option value="Auditorium" selected="@(Model?.Type == "Auditorium" ? "selected" : null)">Auditorium</option>
        <option value="Other">Other</option>
    </select>

    <input id="OtherFacilityTypeInput" class="form-control mt-2" type="text" name="OtherType" placeholder="Please specify" style="display:none;" />

    <input class="form-control" type="number" placeholder="Capacity" name="Capacity" value="@Model?.Capacity" required />

    <textarea class="form-control" placeholder="Description" name="Description">@Model?.Description</textarea>

    <input class="form-control" type="file" name="file" id="FacilityImageUpload" accept="image/*" />

    @if (Model?.Image != null && Model.Image.Length > 0)
    {
        var base64Image = Convert.ToBase64String(Model.Image);
        var imgSrc = $"data:image/jpeg;base64,{base64Image}";

        <div class="mt-3">
            <p>Current Image:</p>
            <img src="@imgSrc" alt="Facility Image" class="img-thumbnail" style="max-width: 100px;" />
        </div>
    }


    <button class="btn btn-primary mt-4" type="submit">Submit</button>
</form>

<script>
    function toggleOtherInput() {
        var select = document.getElementById('FacilityTypeSelect');
        var input = document.getElementById('OtherFacilityTypeInput');

        if (select.value === "Other") {
            input.style.display = "block";
            input.setAttribute("required", "true");
        } else {
            input.style.display = "none";
            input.removeAttribute("required");
        }
    }

    function validateFacilityForm() {
        var name = document.querySelector('input[name="Name"]').value.trim();
        var type = document.getElementById('FacilityTypeSelect').value;
        var otherType = document.getElementById('OtherFacilityTypeInput').value.trim();
        var capacity = document.querySelector('input[name="Capacity"]').value.trim();
        var fileInput = document.getElementById("FacilityImageUpload");
        var allowedExtensions = ["jpg", "jpeg", "png", "gif"];

        if (name === "" || type === "" || capacity === "") {
            alert("Please fill out all required fields.");
            return false;
        }

        if (type === "Other" && otherType === "") {
            alert("Please specify the facility type.");
            return false;
        }

        if (fileInput.files.length > 0) {
            var fileName = fileInput.files[0].name;
            var fileExtension = fileName.split('.').pop().toLowerCase();

            if (!allowedExtensions.includes(fileExtension)) {
                alert("Invalid file type! Please upload an image (JPG, JPEG, PNG, GIF).");
                return false;
            }
        }

        return true;
    }
</script>
