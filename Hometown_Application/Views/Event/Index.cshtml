    @{
        ViewData["Title"] = "Event Calendar";
    }
    <!-- FullCalendar Styles -->
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>

    <!-- Bootstrap & Custom Styling -->
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background: #f4f7fc;
        }

        h2 {
            color: #007bff;
            font-weight: bold;
            margin-bottom: 20px;
        }

        #calendar {
            max-width: 900px;
            margin: 20px auto;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .fc-daygrid-day-frame {
            min-height: 100px !important;   
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .fc-daygrid-day {
            height: 120px !important; 
            transition: all 0.3s ease-in-out;
        }

        .fc-daygrid-day-number {
            font-size: 1rem;
            font-weight: bold;
        }

    
        .fc-toolbar-title {
            font-size: 1.5em !important;
            font-weight: bold;
        }

        .fc-daygrid-day {
            transition: all 0.3s ease-in-out;
        }

            .fc-daygrid-day:hover {
                background: #e9f5ff;
                cursor: pointer;
            }

        .fc-event {
            background: #007bff !important;
            color: white !important;
            border-radius: 5px;
            font-size: 0.9em;
            padding: 5px;
            transition: all 0.3s ease-in-out;
        }


            .fc-event:hover {
                transform: scale(1.05);
                background: #0056b3 !important;
            }

        .holiday-event {
            background-color: red !important; /* Make holiday events red */
            border-color: red !important; /* Match border */
            color: white !important; /* Ensure text is visible */
        }

        .modal-content {
            border-radius: 10px;
            padding: 20px;
        }

        .modal-header {
            background: #007bff;
            color: white;
            border-radius: 10px 10px 0 0;
        }

            .modal-header .close {
                color: white;
            }

        .form-control {
            border-radius: 5px;
            padding: 10px;
        }

        .btn-primary {
            background: #007bff;
            border: none;
            transition: all 0.3s ease-in-out;
        }

            .btn-primary:hover {
                background: #0056b3;
            }
    </style>

    <!-- Page Title -->
    <h2 class="text-center">Event Calendar</h2>

    <!-- Calendar -->
    <div id="calendar"></div>

    <!-- Event Modal -->
    <div id="eventModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Event</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="eventForm">
                        <div class="form-group">
                            <label>Title:</label>
                            <input type="text" id="eventTitle" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label>Start Date & Time:</label>
                            <input type="datetime-local" id="eventStart" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label>End Date & Time:</label>
                            <input type="datetime-local" id="eventEnd" class="form-control">
                        </div>
                        <div class="form-group">
                            <label>Location:</label>
                            <input type="text" id="eventLocation" class="form-control">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="saveEvent">Save Event</button>
                    <button type="button" class="btn btn-success" id="updateEvent" style="display: none;">Update Event</button>
                    <button type="button" class="btn btn-danger" id="deleteEvent" style="display: none;">Delete Event</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');


            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                locale: 'en',
                selectable: true,
                editable: false,
                fixedWeekCount: false,
                events: "/Event/GetEvents",

                eventContent: function (arg) {
                    let timeText = "";
                    if (arg.timeText) {
                        let parts = arg.timeText.split(":");
                        let hour = parseInt(parts[0]);
                        let minute = parts.length > 1 ? parts[1] : "00";
                        let ampm = hour >= 12 ? "PM" : "AM";
                        hour = hour % 12 || 12;
                        timeText = `<span style="font-weight: bold; color: #fff;">${hour}:${minute} ${ampm}</span>`;
                    }

                    let titleText = `<div style="font-weight: bold; font-size: 0.95em; color: #fff;">${arg.event.title}</div>`;
                    let locationText = arg.event.extendedProps?.location
                        ? `<div style="font-size: 0.85em; color: lightgray; font-style: italic;">${arg.event.extendedProps.location}</div>`
                        : "";

                    return {
                        html: `<div style="display: flex; flex-direction: column; gap: 2px;">${timeText}${titleText}${locationText}</div>`
                    };
                },

                dateClick: function (info) {
                    $("#eventStart").val(info.dateStr + "T00:00");
                    $("#eventEnd").val(info.dateStr + "T23:59");
                    $("#eventModal").modal("show");
                },

                eventClick: function (info) {
                    if (confirm("Do you want to delete this event?")) {
                        $.ajax({
                            url: "/Event/DeleteEvent?id=" + info.event.id,
                            type: "DELETE",
                            success: function (response) {
                                if (response.success) {
                                    alert(response.message);
                                    info.event.remove();
                                }
                            }
                        });
                    }
                }
            });

            calendar.render();

            // Fetch Public Holidays
            fetch('https://date.nager.at/api/v3/PublicHolidays/2024/PH')
                .then(response => response.json())
                .then(holidays => {
                    holidays.forEach(holiday => {
                        calendar.addEvent({
                            title: holiday.name,
                            start: holiday.date,
                            classNames: ['holiday-event']
                        });
                    });
                })
                .catch(error => console.error('Error fetching holidays:', error));

            // Save Event
            $("#saveEvent").click(function () {
                var newEvent = {
                    Title: $("#eventTitle").val(),
                    DateTimeStart: $("#eventStart").val(),
                    DateTimeEnd: $("#eventEnd").val() || null,
                    Location: $("#eventLocation").val(),
                    AddedBy: "Admin",
                    UpdatedBy: "Admin"
                };

                $.ajax({
                    url: "/Event/AddEvent",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(newEvent),
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                            location.reload();
                        } else {
                            alert("Failed to save event: " + response.message);
                        }
                    },
                    error: function (xhr) {
                        alert("Error saving event: " + (xhr.responseText || "Unknown error."));
                    }
                });
            });

            // Close Modal
            $(".close, .btn-secondary").click(function () {
                $("#eventModal").modal("hide");
                $("#eventForm")[0].reset();
            });
        });
    </script>
